{
  "url": "https://www.semrush.com/blog/javascript-seo/",
  "title": "JavaScript SEO: How to Optimize JS for Search Engines",
  "content": "What Is JavaScript SEO?\n\nJavaScript SEO is a part of technical SEO that focuses on making websites built with JavaScript easier for search engines to crawl, render, and index. \n\nCommon tasks include the following: \n\nOptimizing content injected via JavaScript\nCorrectly implementing lazy loading \nFollowing internal linking best practices\nPreventing, finding, and fixing JavaScript issues\n\nAnd others. \n\nNote: If you need to refresh your knowledge about basic JS, read our guide: What Is JavaScript & What Do You Use It For?\n\nHow Does Google Crawl and Index JavaScript?\n\nGoogle processes JS in three phases:\n\nCrawling\nRendering\nIndexing\nImage Source:\nGoogle\n\nGoogle’s web crawler (known as Googlebot) queues pages for crawling and rendering. \n\nIt crawls every URL in the queue. \n\nGooglebot makes a request. Then the server sends the HTML document. \n\nNext, Googlebot decides which resources it needs to render the page’s content.\n\nThis means it crawls the HTML. Not JS or CSS files because rendering JavaScript requires immense resources. \n\nThink about all the computing power Googlebot needs to download, read, and run JS for trillions of pages on nearly 2 billion websites. \n\nSo, Google defers rendering JavaScript. It queues anything unexecuted to process later as resources become available. \n\nOnce resources allow, a headless Chromium (Chrome browser without a user interface) renders the page and executes the JavaScript. \n\nGooglebot processes the rendered HTML again for links. And queues the URLs it finds for crawling. \n\nIn the final step, Google uses the rendered HTML to index the page.\n\nServer-Side Rendering vs. Client-Side Rendering vs. Dynamic Rendering\n\nGoogle JavaScript indexing issues are largely based on how your site renders this code: server-side, client-side, or dynamic rendering. \n\nServer-Side Rendering\n\nServer-side rendering (SSR) is when JavaScript is rendered on the server. A rendered HTML page is then served to the client (browser, Googlebot, etc.). \n\nFor example, when you visit a website, your browser makes a request to the server that holds the website’s content. \n\nOnce the request is processed, your browser returns the rendered HTML and shows it on your screen. \n\nSSR tends to help pages with SEO performance because: \n\nIt can reduce the time it takes for a page’s main content to load \nIt can reduce layout shifts that harm the user experience\n\nHowever, SSR can increase the amount of time it takes for your page to allow user inputs. \n\nWhich is why some websites that deal heavily in JS opt to use SSR for some pages and not others. \n\nUnder hybrid models like that, SSR is usually reserved for pages that matter for SEO purposes. And client-side rendering (CSR) is usually reserved for pages that require a lot of user interaction and inputs.\n\nBut implementing SSR is often complex and challenging for developers. \n\nStill, there are tools to help implement SSR: \n\nGatsby and Next.JS for the React framework\nAngular Universal for the Angular framework\nNuxt.js for the Vue.js framework\n\nRead this guide to learn more about setting up server-side rendering. \n\nClient-Side Rendering\n\nCSR is the opposite of SSR. In this case, JavaScript is rendered on the client side (browser or Googlebot, in this case) using the Document Object Model (DOM). \n\nRather than receiving the content from the HTML document as in server-side rendering, you get a bare-bones HTML with a JavaScript file that renders the rest of the site using the browser. \n\nMost websites that use CSR have complex user interfaces or many interactions. \n\nCheck out this guide to learn more about how to set up client-side rendering. \n\nDynamic Rendering\n\nDynamic Rendering is an alternative to server-side rendering. \n\nIt detects bots that may have problems with JS-generated content and delivers a server-rendered version without JavaScript. \n\nAll while showing users the client-side rendered version. \n\nDynamic rendering is a workaround and not a solution Google recommends. It creates additional, unnecessary complexities and resources for Google. \n\nYou might consider using dynamic rendering if you have a large site with content that changes rapidly and needs quick indexing. \n\nOr if your site relies on social media and chat apps that need access to a page’s content. \n\nOr if the crawlers important to your site cannot support some of the features of your JS.\n\nBut really, dynamic rendering is rarely a long-term solution. You can learn more about setting up dynamic rendering and some alternative approaches from Google’s guidelines.\n\nNote: Google generally does not consider dynamic rendering to be “cloaking” (the act of presenting different content to search engines and users). While dynamic rendering isn’t ideal for other reasons, it’s unlikely to violate the cloaking rules outlined in Google’s spam policies. \n\nHow to Make Your Website’s JavaScript Content SEO-Friendly\n\nYou can follow several steps to ensure search engines properly crawl, render, and index your JS content. \n\nUse Google Search Console to Find Errors\n\nGooglebot is based on Chrome’s latest version. But it doesn’t behave the same way as a browser.\n\nWhich means launching your site doesn’t guarantee Google can render its content.\n\nThe URL Inspection Tool in Google Search Console (GSC) can check whether Google can render your pages. \n\nEnter the URL of the page you want to test at the very top. And hit enter. \n\nThen, click on the “Test Live URL” button on the far right. \n\nAfter a minute or two, the tool will show a “Live Test” tab. Now, click “View Tested Page,” and you’ll see the page’s code and a screenshot. \n\nCheck for any discrepancies or missing content by clicking on the “More Info” tab.\n\nA common reason Google can’t render JS pages is because your site’s robots.txt file blocks the rendering. Often accidentally.\n\nAdd the following code to the robot.txt file to ensure no crucial resources are blocked from being crawled:\n\nUser-Agent: Googlebot\nAllow: .js\nAllow: .css\n\nNote: Google doesn’t index .js or .css files in the search results. They’re used to render a webpage. \n\nThere’s no reason to block these crucial resources. Doing so can prevent your content from being rendered and, in turn, from being indexed. \n\nEnsure Google Is Indexing JavaScript Content\n\nOnce you confirm your pages are rendering properly, ensure they’re being indexed. \n\nYou can check this in GSC or on the search engine itself.\n\nTo check on Google, use the “site:” command. For example, replace yourdomain.com below with the URL of the page you want to test:\n\nsite:yourdomain.com/page-URL/\n\nIf the page is indexed, you’ll see it show up as a result. Like so:\n\nIf you don’t, the page isn’t in Google’s index.\n\nIf the page is indexed, check whether a section of JavaScript-generated content is indexed. \n\nAgain, use the “site:” command and include a snippet of JS content on the page. \n\nFor example:\n\nsite:yourdomain.com/page-URL/ \"snippet of JS content\"\n\nYou’re checking whether this specific section of JS content has been indexed. If it is, you’ll see it within the snippet. \n\nLike this:\n\nYou can also use GSC to see whether JavaScript content is indexed. Again, using the URL Inspection Tool.\n\nThis time, rather than testing the live URL, click the “View Crawled Page” button. And check the page’s HTML source code.\n\nScan the HTML code for snippets of JavaScript content.\n\nIf you don’t see your JS content, it could be for several reasons:\n\nThe content cannot be rendered \nThe URL cannot be discovered because JS is generating internal links pointing to it in the event of a click\nThe page times out while Google is indexing the content\nRun a Site Audit\n\nRegularly running audits on your site is a technical SEO best practice. \n\nSemrush’s Site Audit tool can crawl JS as Google would. Even if it’s rendered client-side. \n\nTo start, enter your domain, and click “Create project.”\n\nThen, choose “Enabled” for JS-rendering in the crawler settings. \n\nAfter the crawl, you’ll find any issues under the “Issues” tab. \n\nCommon JavaScript SEO Issues & How to Avoid Them\n\nHere are some of the most common issues, as well as some JavaScript SEO best practices:\n\nBlocking .js files in your robots.txt file can prevent Googlebot from crawling these resources. Which means it can’t render and index them. Allow these files to be crawled to avoid this problem.\nGoogle doesn’t wait long for JavaScript content to render. Your content may not be indexed because of a timeout error. \nSearch engines don’t click buttons. Use internal links to help Googlebot discover your site’s pages. \nWhen lazy loading a page using JavaScript, don’t delay loading content that should be indexed. Primarily focus on images versus text content when setting up lazy loading. \nGoogle often ignores hashes, so make sure static URLs are generated for your site’s webpages. Ensure your URLs look like this: (yourdomain.com/web-page). And not like this (yourdomain.com/#/web-page) or this (yourdomain.com#web-page).\nTake It a Step Further\n\nIf you use what you’ve learned about JavaScript SEO, you’ll be well on your way to creating efficient websites that rank well and users love. \n\nReady to dive deeper?\n\nWe recommend reading the following to learn more about JS and technical SEO:\n\nJavaScript commands cheat sheet\nHow to redirect a URL with JavaScript\nHow to use JS to change meta tags\nHow to get Google to index your website\nCrawlability, indexability, and SEO\n\nFind and Fix JavaScript SEO Issues\n\nwith the Site Audit Tool\n\nTry for Free →",
  "headers": {
    "h1": "JavaScript SEO: How to Optimize JS for Search Engines",
    "h2": [
      "What Is JavaScript SEO?",
      "How Does Google Crawl and Index JavaScript?",
      "Server-Side Rendering vs. Client-Side Rendering vs. Dynamic Rendering",
      "How to Make Your Website’s JavaScript Content SEO-Friendly",
      "Common JavaScript SEO Issues & How to Avoid Them",
      "Take It a Step Further"
    ]
  },
  "images": [
    {
      "src": "https://static.semrush.com/blog/uploads/media/66/54/66546574580173cf52487989ee6179bf/javascript-seo.svg",
      "alt": "JavaScript SEO"
    },
    {
      "src": "https://static.semrush.com/blog/uploads/media/95/c9/95c957f269663b35863b43b7c67c68d6/Mx7lqS8oDRFuIw-VxxwPmCLxBPtAoPfE5oq-6_m2gEB8Iq9y8nU3It4URJpou3xyxF_HKqn_NpCN52mKBwe2GmX9oKzwZNuxRiiuDGsHxmbd7nesYWnwUhFx-TlT5L_TqkliE91Uk_QktxCmYISH1iY.png",
      "alt": "how google processes JS"
    },
    {
      "src": "https://static.semrush.com/blog/uploads/media/ec/66/ec661d623627150d560437ca617566a4/Q1DnanbUqPHiocCbykQFwGWF0qVewb5xPgahCfX-nDVDeVdtZW0CZ9Wzqq6D7QbRkrOzNSQdBEieGCjScSEogjaKiBBBF_0qHxX8CSSGezfUX9INGRNZfPpr63rpl4fPULN6IEJ0a9ud8B3wZAKLQcY.png",
      "alt": "how dynamic rendering works infographic"
    },
    {
      "src": "https://static.semrush.com/blog/uploads/media/74/97/74971a4bf5f0601e11283876f0217489/7_LQM3qazu94ZYU6vZXF6GCwf-YZO8pcyX6t1F0QaQRie_Z2B7QTbmaVraBxOPBXYwxZk_R4SvkLs8Wg3WJ6d6qsDljP2KtftH-H8xcSrQTeNmLids6FeJIwXy7pPx96tl4qaLVZeh_Jx0UaB52jfUM.jpeg",
      "alt": "Enter the URL site"
    },
    {
      "src": "https://static.semrush.com/blog/uploads/media/8c/6b/8c6b8f23c1d4ebde3bcc831c7cd44dfe/1bNG0jre3vleNBC7kmWOgqehrucyPgbwSdEvQXIFAVd2664DHJ0XQkKyiSOVZJ2HViE4a9s6hQ7toK_B6wDmzDRoKwd-ODmpyLRt2mzUj07EHAupwN8O8-nbqKIEfQSXVoCT5AgArt16tii6rifNiq8.jpeg",
      "alt": "Test live URL button"
    },
    {
      "src": "https://static.semrush.com/blog/uploads/media/e6/82/e6826c76b84eae0fdefbb8ab77be605e/kIaaqe4dLJrV-aJhIYESFVtVl4WnIB_vo9k8ekev1HFZ7A64sAsGDFxoTF6q3fDpuEnsDcKcnUXAWwl-dPehYItjY7L8Ao8Q6dMtqLhynN73u8ndmi-Xutsaf88fGlsL3AZZSu4tB7JAk1yCgCwzvHY.jpeg",
      "alt": "Tested page view"
    },
    {
      "src": "https://static.semrush.com/blog/uploads/media/bc/bb/bcbb7790dfaa77c1e6100f91ed3bd39a/zFIHWokvOtT8QkqbNKBBDAiYqFEiL6YnK8uvKbcgSMVHEIKo9dLnA5mGNtDE3gYbYvSjzYH3_NIyJM3W5VbAGYFiDU4i-zM_wx1IeP29TWb01HSaUteolwxo6SulslQiHvNcBccBI6nyndb9pJNHqaA.jpeg",
      "alt": "More info tab"
    },
    {
      "src": "https://static.semrush.com/blog/uploads/media/48/d6/48d6d54f6c7d84601348bc3b02f5e51c/I0JsSnaA1La9EmVYHiJ62bO1qDYU7jYtiy197COo6sfvKQXGHVwaQJLdWQMT32Rh8ImBCVh6EH04hjm1f3kNGdxV_7e4R9VwrPHg_ygiHTKId8kNl2GoTBaPeoAZoCWh5O-q-LpRiGgfyHwUyYq-xLc.jpeg",
      "alt": "indexed pages show in SERP"
    },
    {
      "src": "https://static.semrush.com/blog/uploads/media/96/4e/964e01aa75af3a2eb84fec1b5819a094/2pnbDC_wVQSnryrG_jzcT7CKO2n6MDdBqib4sYpsMZi2vxKQjxyGO01orE8qYZswCxrR-eMpyUnHnnef9dMCxTwYGUCK2tEHBovMu7W2hdQiZ7CZ8zS4-ThQE8rcbqLiXweLJZ-68f5yl1GLTVW21VU.jpeg",
      "alt": "indexed JS content shown in SERP"
    },
    {
      "src": "https://static.semrush.com/blog/uploads/media/cd/96/cd96675bb545e3edcd04644f1a71a3f1/xgBPCOmiR4AMuFNUCECobM8wCUu28MRMbpMKKMtTKo6CvKItA8vqSwdE6HCSdnGhonimunfEvZrZMfB9VXJvpgdfUgDKQju-r2VtbELaIQsf02zHieG0AS-qJNK9EJqLGDwUclpJLpASY5YJGrfkkHs.jpeg",
      "alt": "View crawled page button"
    },
    {
      "src": "https://static.semrush.com/blog/uploads/media/7c/0f/7c0fa75c5994bf361c83df1a17bd498b/OB0xrwnexyr46ec1ojzCHeakx9MLzyTskU9GoI-wc9hJVeW-IQUShm2RTp7Ck0j46XhBXjc0g8DMi6WYnY70K2WW4iGgpLaTckg4cikcBWOQJV-Uzgt_d978lW6GFKRZca4IwKAT2iFuGWHJIy0VPXc.jpeg",
      "alt": "Site Audit tool"
    },
    {
      "src": "https://static.semrush.com/blog/uploads/media/aa/00/aa0025996df82843ac900d937b167306/TDKcJMnmFIBlF_3aiS1GNPEkf-zLVb4zZnBMxaMQssCisnGCHcGzMg-7mjx5t24EnxJbHW29Er1d77hMMxMoxVdKpdeQsClCjJk0ylDk68gNnXOmI6EVSTfCGs1vE48R_cjnolmRO3hWwD4P7DcoBqc.jpeg",
      "alt": "Enable JS-rendering in Site Audit"
    },
    {
      "src": "https://static.semrush.com/blog/uploads/media/b6/90/b69052a579986a0269d1a31d34aedaeb/mRYWCR2qeGbiA1L02sR7ZVuzeMPTJCoPAny7kfVXlNIfSbcSpyM6IJVkqGM9Jjv2Tb9zBYZNRg4fJ9FEsxz5JF5suksw3VHJI8YjJaVHpgmvk7Qz20RFGYUG5RDNHsVRmlKEFj3j-dYW5unsHynN_ds.jpeg",
      "alt": "Issues tab overview"
    },
    {
      "src": "https://static.semrush.com/blog/uploads/files/e3/c1/e3c11aed0d9bffb525e8f7552d6b7fa1/illustration-ads-banner-205x170.svg",
      "alt": "ADS illustration"
    },
    {
      "src": "https://static.semrush.com/semblog-next-static/banners/trial-gift.png",
      "alt": "Trial Semrush banner"
    },
    {
      "src": "https://data.adxcel-ec2.com/pixel/?ad_log=referer&action=content&pixid=1bc0716b-4a34-4511-bf3a-c999ecddd356",
      "alt": ""
    },
    {
      "src": "https://data.adxcel-ec2.com/pixel/?ad_log=referer&action=content&pixid=1bc0716b-4a34-4511-bf3a-c999ecddd356",
      "alt": ""
    },
    {
      "src": "https://sp.analytics.yahoo.com/sp.pl?a=10000&d=Mon%2C%2021%20Oct%202024%2014%3A21%3A32%20GMT&n=4d&b=JavaScript%20SEO%3A%20How%20to%20Optimize%20JS%20for%20Search%20Engines&.yp=10160379&f=https%3A%2F%2Fwww.semrush.com%2Fblog%2Fjavascript-seo%2F&enc=UTF-8&us_privacy=1yn-&yv=1.16.5&tagmgr=gtm",
      "alt": "dot image pixel"
    },
    {
      "src": "https://sp.analytics.yahoo.com/sp.pl?a=10000&b=JavaScript%20SEO%3A%20How%20to%20Optimize%20JS%20for%20Search%20Engines&.yp=10160379&f=https%3A%2F%2Fwww.semrush.com%2Fblog%2Fjavascript-seo%2F&enc=UTF-8&us_privacy=1yn-&yv=1.16.5&tagmgr=gtm",
      "alt": "dot image pixel"
    },
    {
      "src": "https://bat.bing.com/action/0?ti=5128787&tm=gtm002&Ver=2&mid=344fc2b0-df40-47f1-9217-41ac9c8d1dc4&bo=1&sid=bb26a8e08fb711efa410e909a07a93b6&vid=bb26c3f08fb711efbad7afff34d1eb21&vids=0&msclkid=N&uach=pv%3D15.0.0&pi=0&lg=en-US&sw=1600&sh=900&sc=24&tl=JavaScript%20SEO%3A%20How%20to%20Optimize%20JS%20for%20Search%20Engines&p=https%3A%2F%2Fwww.semrush.com%2Fblog%2Fjavascript-seo%2F&r=&lt=631&evt=pageLoad&sv=1&cdb=ARoR&rn=20357",
      "alt": ""
    }
  ],
  "publication_date": null
}