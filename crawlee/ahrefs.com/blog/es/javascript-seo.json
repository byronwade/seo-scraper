{
  "url": "https://ahrefs.com/blog/es/javascript-seo/",
  "slug": "javascript-seo",
  "title": "JavaScript SEO: Todo lo que tienes que saber",
  "description": "Aprende c√≥mo Google maneja JavaScript y c√≥mo solucionar problemas de SEO de JavaScript.",
  "content": "Patrick Stox Patrick Stox es asesor de producto, t√©cnico en SEO y embajador de marca Ahrefs. Organiza el Raleigh SEO Meetup, Raleigh SEO Conference, Beer & SEO Meetup, Findability Conference y modera en / r / TechSEO. Contenido ¬øSab√≠as que aunque el blog Ahrefs funciona con WordPress, gran parte del resto del sitio funciona con JavaScript como React?La mayor√≠a de los sitios web utilizan alg√∫n tipo de JavaScript para agregar interactividad y mejorar la experiencia del usuario. Algunos lo usan para men√∫s, para obtener productos o precios, para obtener contenido de m√∫ltiples fuentes o, en algunos casos, para todo en el sitio. La realidad de la web actual es que JavaScript es omnipresente.Como dijo John Mueller de Google:La web se ha movido de HTML simple, como SEO puedes aceptar eso. Aprenda de los desarrolladores de JS y comparta conocimientos de SEO con ellos. JS no se va a ir.‚Äî üçå John üçå (@JohnMu) August 8, 2017No digo que los SEO necesiten salir y aprender a programar JavaScript. Es todo lo contrario. Los SEO principalmente necesitan saber c√≥mo maneja Google JavaScript y c√≥mo solucionar problemas. En muy pocos casos, un SEO incluso podr√° tocar el c√≥digo. Mi objetivo con esta publicaci√≥n es ayudarte a aprender:¬øQu√© es Javascript SEO?C√≥mo procesa Google las p√°ginas con JavaScriptC√≥mo probar y solucionar problemas de JavaScriptOpciones de renderizadoHacer que su sitio JavaScript sea amigable con SEO¬øQu√© es JavaScript SEO?JavaScript SEO es parte del SEO t√©cnico (Search Engine Optimization) que busca hacer que los sitios web con mucho JavaScript sean f√°ciles de rastrear e indexar, as√≠ como amigables para la b√∫squeda. El objetivo es que estos sitios web se encuentren y se posicionen m√°s alto en los motores de b√∫squeda.¬øJavaScript es malo para el SEO? es malvado JavaScript? De ning√∫n modo. Es diferente de lo que muchos SEO est√°n acostumbrados, y hay una peque√±a curva de aprendizaje. Las personas tienden a usarlo en exceso para cosas en las que probablemente haya una mejor soluci√≥n, pero a veces tienes que trabajar con lo que tienes. Solo se que Javascript no es perfecto y que no siempre es la herramienta adecuada para el trabajo. No se puede analizar progresivamente, a diferencia de HTML y CSS, y puede ser pesado en la carga de la p√°gina y el rendimiento. En muchos casos, puede estar cambiando el rendimiento por la funcionalidad.C√≥mo procesa Google las p√°ginas con JavaScriptEn los primeros d√≠as de los motores de b√∫squeda, una respuesta HTML descargada era suficiente para ver el contenido de la mayor√≠a de las p√°ginas. Gracias al aumento de JavaScript, los motores de b√∫squeda ahora necesitan procesar muchas p√°ginas como lo har√≠a un navegador para que puedan ver el contenido como lo ve un usuario.El sistema que maneja el proceso de representaci√≥n en Google se denomina Servicio de representaci√≥n web (WRS). Google ha proporcionado un diagrama simplista para cubrir c√≥mo funciona este proceso.FuenteDigamos que comenzamos el proceso en la URL.1. RastreadorEl rastreador env√≠a solicitudes GET al servidor. El servidor responde con encabezados y el contenido del archivo, que luego se guarda.Es probable que la solicitud provenga de un agente de usuario m√≥vil, ya que Google est√° ahora principalmente en la indexaci√≥n m√≥vil primero. Puedes verificar para ver c√≥mo Google rastrea tu sitio con la Herramienta de inspecci√≥n de URL dentro de Search Console. Cuando ejecutes esto para una URL, verifica la informaci√≥n de Cobertura para ‚ÄúRastreado c√≥mo‚Äù, y deber√≠a decirlt si todav√≠a est√° en la indexaci√≥n de escritorio o en la indexaci√≥n m√≥vil primero.Las solicitudes provienen principalmente de Mountain View, CA, EE. UU., Pero tambi√©n rastrean p√°ginas adaptables a la ubicaci√≥n fuera de los Estados Unidos. Menciono esto porque algunos sitios bloquear√°n o tratar√°n a los visitantes de un pa√≠s espec√≠fico o usar√°n una IP particular de diferentes maneras, lo que podr√≠a hacer que Googlebot no vea su contenido.Algunos sitios tambi√©n pueden usar la detecci√≥n de agente de usuario para mostrar contenido a un rastreador espec√≠fico. Especialmente con los sitios JavaScript, Google puede estar viendo algo diferente que un usuario. Esta es la raz√≥n por la cual las herramientas de Google, como la Herramienta de inspecci√≥n de URL dentro de Google Search Console, la Prueba m√≥vil optimizada y la Prueba de resultados enriquecidos son importantes para solucionar problemas de JavaScript SEO. Le muestran lo que ve Google y son √∫tiles para verificar si Google puede estar bloqueado y si pueden ver el contenido de la p√°gina. Cubrir√© c√≥mo probar esto en la secci√≥n sobre el Renderer porque hay algunas diferencias clave entre la solicitud GET descargada, la p√°gina renderizada e incluso las herramientas de prueba.Tambi√©n es importante tener en cuenta que, si bien Google indica la salida del proceso de rastreo como ‚ÄúHTML‚Äù en la imagen de arriba, en realidad, est√°n rastreando y almacenando todos los recursos necesarios para construir la p√°gina. P√°ginas HTML, archivos Javascript, CSS, solicitudes XHR, puntos finales API y m√°s.2. ProcesandoHay muchos sistemas posibles por el t√©rmino ‚ÄúProcesamiento‚Äù en la imagen. Voy a cubrir algunos de estos que son relevantes para JavaScript.Recursos y enlacesGoogle no navega de una p√°gina a otra como lo har√≠a un usuario. Parte del procesamiento es verificar en la p√°gina los enlaces a otras p√°ginas y archivos necesarios para construir la p√°gina. Estos enlaces se extraen y se agregan a la cola de rastreo, que es lo que Google est√° usando para priorizar y programar el rastreo.Google extraer√° los enlaces de recursos (CSS, JS, etc.) necesarios para construir una p√°gina a partir de cosas como <link> etiquetas. Sin embargo, los enlaces a otras p√°ginas deben estar en un formato espec√≠fico para que Google los trate como enlaces. Los enlaces internos y externos deben ser una etiqueta <a> con una href atributo. Hay muchas maneras de hacer que esto funcione para los usuarios con JavaScript que no son f√°ciles de buscar.Bien:<a href=‚Äù/page‚Äù>sencillo es bueno</a> <a href=‚Äù/page‚Äù onclick=‚ÄùgoTo(‚Äòpage‚Äô)‚Äù>Tambien est√° bien</a> Mal:<a onclick=‚ÄùgoTo(‚Äòpage‚Äô)‚Äù>no, no hay href</a> <a href=‚Äùjavascript:goTo(‚Äòpage‚Äô)‚Äù>no, falta enlace</a> <a href=‚Äùjavascript:void(0)‚Äù>nope, falta enlace</a> <span onclick=‚ÄùgoTo(‚Äòpage‚Äô)‚Äù>no es el elemento HTML adecuado</span> <option value=\"page\">no, elemento HTML erroneo</option> <a href=‚Äù#‚Äù>no hay enlace</a> Button, ng-click, there are many more ways this can be done incorrectly. Tambi√©n vale la pena se√±alar que los enlaces internos agregados con JavaScript no se recuperar√°n hasta despu√©s de la representaci√≥n. Eso deber√≠a ser relativamente r√°pido y no ser motivo de preocupaci√≥n en la mayor√≠a de los casos.CachingCada archivo que descargue Google, incluidas las p√°ginas HTML, los archivos JavaScript, los archivos CSS, etc., se almacenar√° en cach√© de forma agresiva. Google ignorar√° sus tiempos de cach√© y buscar√° una nueva copia cuando lo desee. Hablar√© un poco m√°s sobre esto y por qu√© es importante en la secci√≥n Renderer.Eliminaci√≥n de duplicadosEl contenido duplicado se puede eliminar o despriorizar del HTML descargado antes de enviarlo a la renderizaci√≥n. Con los modelos de shell de aplicaciones, se puede mostrar muy poco contenido y c√≥digo en la respuesta HTML. De hecho, cada p√°gina en el sitio puede mostrar el mismo c√≥digo, y este podr√≠a ser el mismo c√≥digo que se muestra en varios sitios web. Esto a veces puede hacer que las p√°ginas se traten como duplicados y no se procesen de inmediato. Peor a√∫n, la p√°gina incorrecta o incluso el sitio incorrecto pueden aparecer en los resultados de b√∫squeda. Esto deber√≠a resolverse con el tiempo, pero puede ser problem√°tico, especialmente con los sitios web m√°s nuevos.Directivas m√°s restrictivasGoogle elegir√° las declaraciones m√°s restrictivas entre HTML y la versi√≥n renderizada de una p√°gina. Si JavaScript cambia una declaraci√≥n y eso entra en conflicto con la declaraci√≥n de HTML, Google simplemente obedecer√° lo que sea m√°s restrictivo. Noindex anular√° el √≠ndice y noindex en HTML omitir√° la representaci√≥n por completo.3. Cola de procesamientoCada p√°gina va al renderizador. Una de las mayores preocupaciones de muchos SEO con JavaScript y la indexaci√≥n en dos etapas (HTML luego p√°gina renderizada) es que las p√°ginas podr√≠an no procesarse durante d√≠as o incluso semanas. Cuando Google investig√≥ esto, descubrieron que las p√°ginas iban al procesador en un tiempo medio de 5 segundos, y el percentil 90 era minutos. Por lo tanto, la cantidad de tiempo entre obtener el HTML y renderizar las p√°ginas no deber√≠a ser una preocupaci√≥n en la mayor√≠a de los casos.4. RenderizadorEl renderizador es donde Google renderiza una p√°gina para ver lo que ve un usuario. Aqu√≠ es donde van a procesar el JavaScript y los cambios realizados por JavaScript en el Modelo de Objetos del Documento (DOM).Para esto, Google est√° utilizando un navegador Chrome sin cabeza que ahora es ‚Äúperenne‚Äù, lo que significa que deber√≠a usar la √∫ltima versi√≥n de Chrome y admitir las √∫ltimas funciones. Hasta hace poco, Google estaba renderizando con Chrome 41, por lo que muchas funciones no eran compatibles.Google tiene m√°s informaci√≥n sobre el Servicio de renderizado web (WRS), que incluye cosas como negar permisos, ser ap√°trida, aplanar DOM ligero y DOM sombra, y m√°s que vale la pena leer.Renderizar a escala web puede ser la octava maravilla del mundo. Es una tarea seria y requiere una gran cantidad de recursos. Debido a la escala, Google est√° tomando muchos atajos con el proceso de renderizado para acelerar las cosas. En Ahrefs, somos la √∫nica herramienta SEO importante que procesa p√°ginas web a escala, y logramos procesar ~ 150 millones de p√°ginas por d√≠a para que nuestro √≠ndice de enlaces sea m√°s completo. Nos permite verificar las redirecciones de JavaScript y tambi√©n podemos mostrar los enlaces que encontramos insertados con JavaScript que mostramos con una etiqueta JS en los informes de enlaces:Recursos en cach√©Google depende en gran medida de los recursos de almacenamiento en cach√©. Las p√°ginas est√°n en cach√©; los archivos se almacenan en cach√©; Las solicitudes de API se almacenan en cach√©; B√°sicamente, todo se almacena en cach√© antes de enviarse al procesador. No salen y descargan cada recurso para cada carga de p√°gina, sino que usan recursos en cach√© para acelerar este proceso.Esto puede conducir a algunos estados imposibles en los que se utilizan versiones de archivos anteriores en el proceso de representaci√≥n y la versi√≥n indexada de una p√°gina puede contener partes de archivos m√°s antiguos. Puedes usar el control de versiones de los archivos o las huellas digitales de contenido para generar nuevos nombres de archivos cuando se realicen cambios significativos para que Google tenga que descargar la versi√≥n actualizada del recurso para su representaci√≥n.No Fixed TimeoutUn mito com√∫n de SEO es que el procesador solo espera cinco segundos para cargar tu p√°gina. Si bien siempre es una buena idea hacer que tu sitio sea m√°s r√°pido, este mito realmente no tiene sentido con la forma en que Google almacena en cach√© los archivos mencionados anteriormente. B√°sicamente est√°n cargando una p√°gina con todo lo que ya est√° en cach√©. El mito proviene de las herramientas de prueba, como la Herramienta de inspecci√≥n de URL, donde los recursos se obtienen en vivo y necesitan establecer un l√≠mite razonable.No hay un tiempo de espera fijo para el renderizador. Lo que probablemente est√°n haciendo es algo similar a lo que hace el p√∫blico Rendertron. Es probable que esperen algo como networkidle0 donde no se produce m√°s actividad de red y tambi√©n establecen una cantidad m√°xima de tiempo en caso de que algo se atasque o alguien est√© tratando de minar bitcoin en sus p√°ginas.Lo que ve el robot de GoogleGooglebot no toma medidas en las p√°ginas web. No van a hacer clic ni a desplazarse, pero eso no significa que no tenga soluciones. Para el contenido, siempre que se cargue en el DOM sin una acci√≥n necesaria, lo ver√°. Cubrir√© esto m√°s en la secci√≥n de soluci√≥n de problemas, pero b√°sicamente, si el contenido est√° en el DOM pero est√° oculto, se ver√°. Si no se carga en el DOM hasta despu√©s de un clic, no se encontrar√° el contenido.Google no necesita desplazarse para ver su contenido, ya que tienen una soluci√≥n inteligente para ver el contenido. Para dispositivos m√≥viles, cargan la p√°gina con un tama√±o de pantalla de 411x731 p√≠xeles y redimensionan la longitud a 12,140 p√≠xeles. Esencialmente, se convierte en un tel√©fono realmente largo con un tama√±o de pantalla de 411x12140 p√≠xeles. Para el escritorio, hacen lo mismo y van de 1024x768 p√≠xeles a 1024x9307 p√≠xeles.Otro atajo interesante es que Google no pinta los p√≠xeles durante el proceso de renderizado. Se necesita tiempo y recursos adicionales para finalizar la carga de una p√°gina, y realmente no necesitan ver el estado final con los p√≠xeles pintados. Solo necesitan conocer la estructura y el dise√±o y lo obtienen sin tener que pintar los p√≠xeles. Como dice Martin Splitt de Google:https://youtube.com/watch?v=Qxd_d9m9vzo%3Fstart%3D154En la b√∫squeda de Google, realmente no nos importan los p√≠xeles porque realmente no queremos mostr√°rselo a alguien. Queremos procesar la informaci√≥n y la informaci√≥n sem√°ntica, por lo que necesitamos algo en el estado intermedio. No tenemos que pintar los p√≠xeles.Un visual podr√≠a ayudar a explicar lo que se corta un poco mejor. En Chrome Dev Tools, si ejecuta una prueba en la pesta√±a Rendimiento, obtiene un gr√°fico de carga. La parte verde s√≥lida aqu√≠ representa la etapa de pintura y para Googlebot eso nunca sucede, por lo que ahorran recursos.Gray = descargasBlue = HTMLYellow = JavaScriptPurple = Dise√±oGreen = Colores5. Cola de rastreoGoogle tiene un recurso que habla un poco sobre el presupuesto de rastreo, pero debes saber que cada sitio tiene su propio presupuesto de rastreo, y cada solicitud debe ser priorizada. Google tambi√©n tiene que equilibrar el rastreo de su sitio frente a cualquier otro sitio en Internet. Los sitios m√°s nuevos en general o los sitios con muchas p√°ginas din√°micas probablemente se rastrear√°n m√°s lentamente. Algunas p√°ginas se actualizar√°n con menos frecuencia que otras, y algunos recursos tambi√©n pueden solicitarse con menos frecuencia.Pruebas / resoluci√≥n de problemasUn ‚Äòproblema‚Äô con los sitios JavaScript es que solo pueden actualizar partes del DOM. Navegar a otra p√°gina como usuario puede no actualizar algunos aspectos como las etiquetas de t√≠tulo o las etiquetas can√≥nicas en el DOM, pero esto puede no ser un problema para los motores de b√∫squeda. Recuerda, Google carga cada p√°gina sin estado, por lo que no est√°n guardando informaci√≥n previa y no est√°n navegando entre p√°ginas. He visto que los SEO se piensan que hay un problema debido a lo que ven despu√©s de navegar de una p√°gina a otra, como una etiqueta can√≥nica que no se actualiza, pero es posible que Google nunca vea este estado. Los desarrolladores pueden solucionar esto actualizando el estado utilizando lo que se llama la historial de API, pero nuevamente puede que no sea un problema. Actualiza la p√°gina y veas lo que veas o, mejor a√∫n, ejec√∫talo a trav√©s de una de las herramientas de prueba de Google para ver lo que ven. M√°s sobre eso en un segundo.Ver fuente vs. InspeccionarCuando haces clic derecho en una ventana del navegador, ver√°s un par de opciones para ver el c√≥digo fuente de la p√°gina y para inspeccionarla. View-source le mostrar√° lo mismo que una solicitud GET. Este es el HTML sin formato de la p√°gina. Inspeccionar le muestra el DOM procesado despu√©s de que se han realizado cambios y est√° m√°s cerca del contenido que ve Googlebot. B√°sicamente es la versi√≥n actualizada y m√°s reciente de la p√°gina. Debes usar inspeccionar mejor que view-source cuando trabajes con JavaScript.Google CacheEl cach√© de Google no es una forma confiable de verificar lo que ve Googlebot. Suele ser el HTML inicial, aunque a veces es el HTML representado o una versi√≥n anterior. El sistema se cre√≥ para ver el contenido cuando un sitio web no funciona. No es particularmente √∫til como herramienta de depuraci√≥n.Herramientas de prueba de GoogleLas herramientas de prueba de Google como el Inspector de URL dentro de Google Search Console, Mobile Friendly Tester, Rich Results Tester son √∫tiles para la depuraci√≥n. A√∫n as√≠, incluso estas herramientas son ligeramente diferentes de lo que ver√° Google. Ya habl√© sobre el tiempo de espera de cinco segundos en estas herramientas que el renderizador no tiene, pero estas herramientas tambi√©n difieren en que est√°n extrayendo recursos en tiempo real y no est√°n usando las versiones en cach√© como lo har√≠a el renderizador. Las capturas de pantalla de estas herramientas tambi√©n muestran p√°ginas con los p√≠xeles pintados, que Google no ve en el renderizador.Sin embargo, las herramientas son √∫tiles para ver si el contenido est√° cargado con DOM. El HTML que se muestra en estas herramientas es el DOM representado. Puedes buscar un fragmento de texto para ver si se carg√≥ de forma predeterminada.Las herramientas tambi√©n le mostrar√°n recursos que pueden estar bloqueados y mensajes de error de la consola que son √∫tiles para la depuraci√≥n.Buscar texto en GoogleOtra comprobaci√≥n r√°pida que puedes hacer es simplemente buscar un fragmento de tu contenido en Google. Busque ‚Äúalguna frase de su contenido‚Äù y vea si se devuelve la p√°gina. Si es as√≠, es probable que haya visto tu contenido. Ten en cuenta que el contenido que est√° oculto de forma predeterminada puede no aparecer dentro de tu fragmento en los SERP.AhrefsJunto con las p√°ginas de representaci√≥n del √≠ndice de enlaces, puedes habilitar JavaScript en los rastreos de Auditor√≠a del sitio para desbloquear m√°s datos en tus auditor√≠as.La barra de herramientas de Ahrefs tambi√©n admite JavaScript y te permite comparar HTML con versiones renderizadas de etiquetas.Opciones de renderHay muchas opciones cuando se trata de representar JavaScript. Google tiene un cuadro s√≥lido que solo voy a mostrar. Cualquier tipo de SSR, renderizado est√°tico, configuraci√≥n previa al renderizado estar√° bien para los motores de b√∫squeda. El principal que causa problemas es el renderizado completo del lado del cliente donde todo el renderizado ocurre en el navegador.Si bien Google probablemente estar√≠a bien incluso con la representaci√≥n del lado del cliente, es mejor elegir una opci√≥n de representaci√≥n diferente para admitir otros motores de b√∫squeda. Bing tambi√©n tiene soporte para la representaci√≥n de JavaScript, pero la escala es desconocida. Yandex y Baidu tienen un soporte limitado de lo que he visto, y muchos otros motores de b√∫squeda tienen poco o ning√∫n soporte para JavaScript.FuenteTambi√©n existe la opci√≥n de Representaci√≥n din√°mica, que es la representaci√≥n para ciertos agentes de usuario. Esto es b√°sicamente una soluci√≥n alternativa, pero puede ser √∫til para renderizar para ciertos bots como motores de b√∫squeda o incluso bots de redes sociales. Los bots de redes sociales no ejecutan JavaScript, por lo que no se ver√°n cosas como las etiquetas OG a menos que prestes el contenido antes de entregarlo.Si estabas utilizando el antiguo esquema de rastreo AJAX, ten en cuenta que esto ha quedado en desuso y es posible que ya no sea compatible.Hacer que su sitio JavaScript sea amigable con SEOMuchos de los procesos son similares a las cosas que los SEO ya est√°n acostumbrados a ver, pero puede haber ligeras diferencias.SEO en la p√°ginaTodav√≠a se aplican todas las reglas normales de SEO en la p√°gina para contenido, etiquetas de t√≠tulo, meta descripciones, atributos alt, etiquetas de meta robot, etc. Ver SEO en la p√°gina: una gu√≠a pr√°ctica.Un par de problemas que veo repetidamente cuando trabajo con sitios web de JavaScript son que los t√≠tulos y las descripciones pueden reutilizarse y que los atributos alt en las im√°genes rara vez se configuran.Permitir gatearNo bloquees el acceso a los recursos. Google necesita poder acceder y descargar recursos para poder procesar las p√°ginas correctamente. En su robots.txt, la forma m√°s f√°cil de permitir que se rastreen los recursos necesarios es agregar:User-Agent: Googlebot Allow: .js Allow: .css URLsCambia las URL al actualizar el contenido. Ya mencion√© el historial de API, pero debes saber que con los marcos de trabajo de JavaScript, van a tener un enrutador que te permite asignar direcciones URL limpias. No deseas utilizar hashes (#) para el enrutamiento. Esto es especialmente un problema para Vue y algunas de las versiones anteriores de Angular. Entonces, para una URL como abc.com/#something, un servidor generalmente ignora cualquier cosa despu√©s de un #. Para solucionar esto para Vue, puedes trabajar con tu desarrollador para cambiar lo siguiente:Vue router: Utilice el modo \"Historial\" en lugar del modo tradicional \"Hash\". const router = new VueRouter ({ mode: ‚Äòhistory‚Äô, router: [] //the array of router links )} Contenido duplicadoCon JavaScript, puede haber varias URL para el mismo contenido, lo que conduce a problemas de contenido duplicado. Esto puede ser causado por may√∫sculas, ID, par√°metros con ID, etc. Por lo tanto, todos estos pueden existir:domain.com/Abc domain.com/abc domain.com/123 domain.com/?id=123La soluci√≥n es simple. Elija una versi√≥n que desee indexar y establezca etiquetas can√≥nicas.Opciones de tipo ‚Äúplugin‚Äù de SEOPara los frameworks de JavaScript, estos generalmente se denominan m√≥dulos. Encontrar√°s versiones para muchos de los frameworks populares como React, Vue y Angular buscando el nombre del framework + m√≥dulo como ‚ÄúReact Helmet‚Äù. Las metaetiquetas, Helmet y Head son m√≥dulos populares con una funcionalidad similar que te permite configurar muchas de las etiquetas populares necesarias para SEO.P√°ginas de errorDebido a que los frameworks de JavaScript no son del lado del servidor, realmente no pueden arrojar un error del servidor como un 404. Tienes un par de opciones diferentes para las p√°ginas de error:Usa un redireccionamiento de JavaScript a una p√°gina que responda con un c√≥digo de estado 404Agrega una etiqueta noindex a la p√°gina que falla junto con alg√∫n tipo de mensaje de error como ‚ÄúP√°gina 404 no encontrada‚Äù. Esto se tratar√° como un 404 suave ya que el c√≥digo de estado real devuelto ser√° 200 correcto.SitemapLos marcos de JavaScript suelen tener enrutadores que se asignan para limpiar las URL. Estos enrutadores generalmente tienen un m√≥dulo adicional que tambi√©n puede crear mapas de sitio. Puedes encontrarlos buscando el mapa del sitio de tu sistema + enrutador, como ‚ÄúVue router sitemap‚Äù. Muchas de las soluciones de representaci√≥n tambi√©n pueden tener opciones de mapa del sitio. Nuevamente, solo busca el sistema que usas y busca en Google el sistema + mapa del sitio como ‚ÄúGatsby sitemap‚Äù y seguramente encontrar√°s una soluci√≥n que ya existe.RedireccionamientosLos SEO se utilizan para redireccionamientos 301/302, que son del lado del servidor. Pero Javascript normalmente se ejecuta del lado del cliente. Esto est√° bien ya que Google procesa la p√°gina como sigue la redirecci√≥n. Las redirecciones a√∫n pasan todas las se√±ales como PageRank. Por lo general, puedes encontrar estos redireccionamientos en el c√≥digo buscando ‚Äúwindow.location.href‚ÄùInternacionalizacionPor lo general, hay algunas opciones de m√≥dulos para diferentes marcos que admiten algunas caracter√≠sticas necesarias para la internacionalizaci√≥n, como hreflang. Com√∫nmente se han portado a los diferentes sistemas e incluyen i18n, intl o muchas veces los mismos m√≥dulos utilizados para etiquetas de encabezado como Helmet se pueden usar para agregar las etiquetas necesarias.Carga lentaPor lo general, hay m√≥dulos para manejar la carga diferida. Si a√∫n no lo has notado, hay m√≥dulos para manejar casi todo lo que necesitas hacer al trabajar con marcos JavaScript. Lazy y Suspense son los m√≥dulos m√°s populares para la carga diferida. Querr√°s cargar im√°genes de forma diferida, pero ten cuidado de no cargar contenido de forma diferida. Esto se puede hacer con JavaScript, pero puede significar que los motores de b√∫squeda no lo captan correctamente.ConclusionesJavaScript es una herramienta para ser utilizada sabiamente, no es algo que los SEO tengan que temer. Afortunadamente, este art√≠culo te ha ayudado a comprender c√≥mo trabajar mejor con √©l, pero no tengas miedo de comunicarte con tus desarrolladores y trabajar con ellos y hacerles preguntas. Ser√°n sus mejores aliados para ayudar a mejorar tu sitio JavaScript para motores de b√∫squeda.¬øTiene preguntas? Av√≠same en TwitterLecturas complementariasConceptos b√°sicos de SEO de JavascriptJavaScript SEO Horario de oficinaGrupo de trabajo de sitios JavaScriptJavaScript SEO Video Series Get the week's best marketing content Email Subscription Subscribe Leave this field empty if you're human: Escrito por Patrick Stox Patrick Stox es asesor de producto, t√©cnico en SEO y embajador de marca Ahrefs. Organiza el Raleigh SEO Meetup, Raleigh SEO Conference, Beer & SEO Meetup, Findability Conference y modera en / r / TechSEO.",
  "headers": [
    {
      "level": "H1",
      "text": "JavaScript SEO: Todo lo que tienes que¬†saber"
    },
    {
      "level": "H2",
      "text": "¬øQu√© es JavaScript SEO?"
    },
    {
      "level": "H2",
      "text": "C√≥mo procesa Google las p√°ginas con JavaScript"
    },
    {
      "level": "H3",
      "text": "1. Rastreador"
    },
    {
      "level": "H3",
      "text": "2. Procesando"
    },
    {
      "level": "H4",
      "text": "Recursos y enlaces"
    },
    {
      "level": "H4",
      "text": "Caching"
    },
    {
      "level": "H4",
      "text": "Eliminaci√≥n de duplicados"
    },
    {
      "level": "H4",
      "text": "Directivas m√°s restrictivas"
    },
    {
      "level": "H3",
      "text": "3. Cola de procesamiento"
    },
    {
      "level": "H3",
      "text": "4. Renderizador"
    },
    {
      "level": "H4",
      "text": "Recursos en¬†cach√©"
    },
    {
      "level": "H4",
      "text": "No Fixed Timeout"
    },
    {
      "level": "H4",
      "text": "Lo que ve el robot de Google"
    },
    {
      "level": "H3",
      "text": "5. Cola de rastreo"
    },
    {
      "level": "H2",
      "text": "Pruebas / resoluci√≥n de problemas"
    },
    {
      "level": "H3",
      "text": "Ver fuente vs. Inspeccionar"
    },
    {
      "level": "H3",
      "text": "Google Cache"
    },
    {
      "level": "H3",
      "text": "Herramientas de prueba de Google"
    },
    {
      "level": "H3",
      "text": "Buscar texto en Google"
    },
    {
      "level": "H3",
      "text": "Ahrefs"
    },
    {
      "level": "H2",
      "text": "Opciones de render"
    },
    {
      "level": "H2",
      "text": "Hacer que su sitio JavaScript sea amigable con¬†SEO"
    },
    {
      "level": "H3",
      "text": "SEO en la p√°gina"
    },
    {
      "level": "H3",
      "text": "Permitir gatear"
    },
    {
      "level": "H3",
      "text": "URLs"
    },
    {
      "level": "H3",
      "text": "Contenido duplicado"
    },
    {
      "level": "H3",
      "text": "Opciones de tipo ‚Äúplugin‚Äù de¬†SEO"
    },
    {
      "level": "H3",
      "text": "P√°ginas de¬†error"
    },
    {
      "level": "H3",
      "text": "Sitemap"
    },
    {
      "level": "H3",
      "text": "Redireccionamientos"
    },
    {
      "level": "H3",
      "text": "Internacionalizacion"
    },
    {
      "level": "H3",
      "text": "Carga lenta"
    },
    {
      "level": "H2",
      "text": "Conclusiones"
    }
  ],
  "author": "Patrick Stox"
}