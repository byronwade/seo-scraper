{
  "url": "https://moz.com/blog/mobile-app-search",
  "slug": "mobile-app-search",
  "title": "Everything You Need to Know About Mobile App Search - MozMoz logoMenu openMenu closeSearchMoz logo",
  "description": "Mobile isn't the future. It's the present. Learn about new and emerging mobile app search opportunities, from mobile search results to app indexation. The growth of mobile search is transforming how we define technical SEO, moving beyond front-end and back-end optimization of websites into theâ€¦",
  "content": "Everything You Need to Know About Mobile App Search Technical SEO | Advanced SEO | Mobile SEO By: Justin Briggs February 17, 2015 The author's views are entirely their own (excluding the unlikely event of hypnosis) and may not always reflect the views of Moz. Table of Contents Copied! By: Justin Briggs February 17, 2015 Everything You Need to Know About Mobile App Search Technical SEO | Advanced SEO | Mobile SEO The author's views are entirely their own (excluding the unlikely event of hypnosis) and may not always reflect the views of Moz. Mobile isn't the future. It's the present. Mobile apps are not only changing how we interact with devices and websites, they're changing the way we search. Companies are creating meaningful experiences on mobile-friendly websites and apps, which in turn create new opportunities to get in front of users. I'd like to explore the growth of mobile app search and its current opportunities to gain visibility and drive engagement.Rise of mobile app search The growth of mobile device usage has driven a significant lift in app-related searches. This is giving rise to mobile app search as a vertical within traditional universal search. While it has been clear for some time that mobile search is important, that importance has been more heavily emphasized by Google recently, as they continue to push mobile-friendly labels in SERPs, and are likely increasing mobile-friendliness's weight as a ranking factor. The future of search marketing involves mobile, and it will not be limited to optimizing HTML webpages, creating responsive designs, and optimizing UX. Mobile SEO is a world where apps, knowledge graph, and conversational search are front and center. For the top 10 leading properties online, 34% of visitors are mobile-only (comScore data), and, anecdotally, we're seeing similar numbers with our clients, if not more. It's also worth noting that 72% of mobile engagement relies on apps vs. on browsers. Looking at teen usage, apps are increasingly dominant. Additionally, 55% of teens use voice search more than once per day. If you haven't read it, grab some coffee and read A Teenagers View on Social Media, which is written by a 19-year old who gives his perspective of online behavior. Reading between the lines shows a number of subtle shifts in behavior. I noticed that every time I expected him say website, he said application. In fact, he referenced application 15 times, and it is the primary way he describes social networks. This means that one of the fasting growing segments of mobile users cannot be marketed to by optimizing HTML webpages alone, requiring search marketers to expand their skills into app optimization.The mobile app pack This shift is giving rise to the mobile app pack and app search results, which are triggered on searches from mobile devices in instances of high mobile app intent. Think of these as being similar to local search results. Considering mobile searcher behavior, these listings dominate user attention. As with local search, mobile app search can reorder traditional results, completely push them down, or integrate app listings with traditional web results. You can test on your desktop using a user-agent switcher, or by searching on your iOS or Android device. There are slight differences between iPhone and Android mobile app results: From what I've seen, mobile app listings trigger more frequently, and with more results, on Android search results when compared to iOS. Additionally, iOS mobile app listings are represented as a traditional website result listing, while mobile app listings on Android are more integrated. Some of the differences also come from the differences in app submission guidelines on the two major stores, the Apple App Store and Google Play.Overview of differences in mobile app results Title - Google uses the app listing page's HTML title (which is the app's title). iOS app titles can exceed 55-62 characters, which causes wrapping and title truncation like a traditional result. Android app title requirements are shorter, so titles are typically shorter on Android mobile app listings. URL - iOS mobile app listings display the iTunes URL to the App Store as part of the search result. Icon - iOS icons are square and Android icons have rounded corners. Design - Android results stand out more, with an \"Apps\" headline above the pack and a link to Google Play at the end. App store content - The other differences show up in the copy, ratings, and reviews on each app store.Ranking in mobile app search results Ranking in mobile app search results is a combination of App Store Optimization (ASO) and traditional SEO. The on-page factors are dependent upon your app listing, so optimization starts with having solid ASO. If you're not familiar with ASO, it's the process of optimizing your app listing for internal app store search.Basics of ASO Ranking in the Apple App Store and in Google Play is driven by two primary factors: keyword alignment and app performance. Text fields in the app store listing, such as title, description, and keyword list, align the app with a particular set of keywords. Performance metrics including download velocity, app ratings, and reviews determine how well the app will rank for each of those keywords. (Additionally, the Google Play algorithm may include external, web-based performance metrics like citations and links as ranking factors.) Mobile app listing optimization While I won't explore ASO in-depth here, as it's very similar to traditional SEO, optimizing app listings is primarily a function of keyword targeting. Tools like Sensor Tower, MobileDevHQ, and App Annie can help you with mobile app keyword research. However, keep in mind that mobile app search listings show up in universal search, so it's important to leverage traditional keyword research tools like the AdWords Tool or Google Trends. While there are similarities with ASO, optimizing for these mobile app search listings on the web has some slight differences.Differences between ASO & mobile app SEO targeting Titles - While the Apple App Store allows relatively long titles, they are limited to the preview length in organic search. Titles should be optimized with Google search in mind, in addition to optimizing for the app store. Additionally, several apps aggressively target keywords in their app title, but caution should be used as spamming keywords could influence app performance in Google. Description - The app description on the App Store may not be a factor in internal search, but it will impact external app search results. Leverage keyword targeting best practices when writing your iOS app description, as well as your Android app description. Device and platform keywords - When targeting for app store search, it is not as important to target terms related to the OS or device. However, these terms can help visibility in external search. Include device and OS terms, such as Android, Samsung Note, iOS, iPad, and iPhone.App performance optimization Outside of content optimization, Google looks at the performance of the app. On the Android side, they have access to the data, but for iOS they have to rely on publicly available information. App performance factors Number of ratings Average rating score Content and sentiment analysis of reviews Downloads / installs Engagement and retention Internal links on app store For iOS, the primary public metrics are ratings and reviews. However, app performance can be inferred using the App Store's ranking charts and search results, which can be leveraged as proxies of these performance metrics. The following objectives will have the greatest influence on your mobile app search ranking: Increase your average rating number Increase your number of ratings Increase downloads For app ratings and reviews, leverage platforms like Apptentive to improve your ratings. They are very effective at driving positive ratings. Additionally, paid tactics are a great way to drive install volume and are one area where paid budget capacity could directly influence organic results in Google. Anecdotally, both app stores use rating numbers (typically above or below 4 stars) to make decisions around promoting an app, either through merchandising spots or co-branded campaigns. I suspect this is being used as a general cut-off for what is displayed in universal results. Increasing your rating above 4 stars should improve the likelihood you'll appear in mobile app search results. Lastly, think of merchandising and rankings in terms of internal linking structures. The more visible you are inside of the app store, the more visibility you have in external search.App web performance optimization Lastly, we're talking Google rankings, so factors like links, citations, and social shares matter. You should be conducting content marketing, PR, and outreach for your app. Focus on merchandising your app on your own site, as well as increasing coverage of your app (linking to the app store page). The basics of link optimization apply here.App indexation - drive app engagement Application search is not limited to driving installs via app search results. With app indexing, you can leverage your desktop/mobile website visibility in organic search to drive engagement with those who have your app installed. Google can discover and expose content deep inside your app directly in search results. This means that when a user clicks on your website in organic search, it can open your app directly, taking them to that exact piece of content in your app, instead of opening your website. App indexation fundamentally changes technical SEO, extending SEO from server and webpage setup to the setup and optimization of applications. This also fundamentally changes search. Your most avid and engaged user may choose to no longer visit your website. For example, on my Note 4, when I click a link to a site of a brand that I have an app installed for, Google gives me the option not only to open in the app, but to set opening the app as a default behavior. If a user chooses to open your site in your app, they may never visit your site from organic search again. App indexation is currently limited to Android devices, but there is evidence to suggest that it's already in the works and is soon to be released on iOS devices. There have been hints for some time, but markup is showing up in the wild suggesting that Google is actively working with Apple and select brands to develop iOS app indexing.URI optimization for apps The first step in creating an indexable app is to set up your app to support deep links. Deep links are URIs that are understood by your app and will open up a specific piece of content. They are effectively URLs for applications. Once this URI is supported, a user can be sent to deep content in the app. These can be discovered as alternates to your desktop site's URLs, similar to how separate-site mobile sites are defined as alternate URLs for the desktop site. In instances of proper context (on an Android device with the app installed), Google can direct a user to the app instead of the website. Setting this up requires working with your app developer to implement changes inside the app as well as working with your website developers to add references on your desktop site.Adding intent filters Android has documented the technical setup of deep links in detail, but it starts with setting up intent filters in an app's Android manifest file. This is done with the following code. <activity android:name=\"com.example.android.GizmosActivity\"android:label=\"@string/title_gizmos\" ><intent-filter android:label=\"@string/filter_title_viewgizmos\"><action android:name=\"android.intent.action.VIEW\" /><data android:scheme=\"http\"android:host=\"example.com\"android:pathPrefix=\"/gizmos\" /><category android:name=\"android.intent.category.DEFAULT\" /><category android:name=\"android.intent.category.BROWSABLE\" /></intent-filter></activity> This dictates the technical optimization of your app URIs for app indexation and defines the elements used in the URI example above. The <intent-filter> element should be added for activities that should be launchable from search results. The <action> element specifies the ACTION_VIEW intent action so that the intent filter can be reached from Google Search. The <data> tag represents a URI format that resolves to the activity. At minimum, the <data> tag must include the android:scheme attribute. Include the BROWSABLE category. The BROWSABLE category is required in order for the intent filter to be accessible from a web browser. Without it, clicking a link in a browser cannot resolve to your app. The DEFAULT category is optional, but recommended. Without this category, the activity can be started only with an explicit intent, using your app component name.Testing deep links Google has created tools to help test your deep link setup. You can use Google's Deep Link Test Tool to test your app behavior with deep links on your phone. Additionally, you can create an HTML page with an intent:// link in it. For example : <a href=\"intent://example.com/page-1#Intent;scheme=http;package=com.example.android;end;\"> <a href=\"http://example.com/page-1\">http://example.com/page-1></a> This link would open up deep content inside the app from the HTML page.App URI crawl and discovery Once an app has deep link functionality, the next step is to ensure that Google can discover these URIs as part of its traditional desktop crawling.Ways to get apps crawled Rel=\"alternate\" in HTML head ViewAction with Schema.org Rel=\"alternate\" in XML Sitemap Implementing all three will create clear signals, but at minimum you should add the rel=\"alternate\" tag to the HTML head of your webpages. Effectively, think of the app URI as being similar to a mobile site URL when setting up a separate-site mobile site for SEO. The mobile deep link is an alternative way to view a webpage on your site. You map a piece of content on your site to a corresponding piece of content inside the app. Before you get started, be sure to verify your website and app following the guidelines here. This will verify your app in Google Play Developer Console and Google Webmaster Tools.#1: Rel=\"alternate\" in HTML head On an example page, such as example.com/page-1, you would add the following code to the head of the document. Again, very similar to separate-site mobile optimization. <html> <head> ... <link rel=\"alternate\" href=\"android-app://com.example.android/http/example.com/page-1\" /> ... </head> <body> </body> #2: ViewAction with Schema.org Additionally, you can reference the deep link using Schema.org and JSON by using a ViewAction. <script type=\"application/ld+json\"> { \"@context\": \"http://schema.org\", \"@type\": \"WebPage\", \"@id\": \"http://example.com/gizmos\", \"potentialAction\": { \"@type\": \"ViewAction\", \"target\": \"android-app://com.example.android/http/example.com/gizmos\" } } </script> #3 Rel=\"alternate\" in XML sitemap Lastly, you can reference the alternate URL in your XML Sitemaps, similar to using the rel=\"alternate\" for mobile sites. <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\" xmlns:xhtml=\"http://www.w3.org/1999/xhtml\"> <url> <loc>http://example.com/page-1</loc> <xhtml:link rel=\"alternate\" href=\"android-app://com.example.android/http/example.com/page-1\" /> </url> ... </urlset> Once these are in place, Google can discover the app URI and provide your app as an alternative way to view content found in search.Bot control and robots noindex for apps There may be instances where there is content within your app that you do not want indexed in Google. A good example of this might be content or functionality that is built out on your site, but has not yet been developed in your app. This would create an inferior experience for users. The good news is that we can block indexation with a few updates to the app. First, add the following to your app resource directory (res/xml/noindex.xml). <?xml version=\"1.0\" encoding=\"utf-8\"?> <search-engine xmlns:android=\"http://schemas.android.com/apk/res/android\"> <noindex uri=\"http://example.com/gizmos/hidden_uri\"/> <noindex uriPrefix=\"http://example.com/gizmos/hidden_prefix\"/> <noindex uri=\"gizmos://hidden_path\"/> <noindex uriPrefix=\"gizmos://hidden_prefix\"/> </search-engine> As you can see above, you can block an individual URI or define a URI prefix to block entire folders. Once this has been added, you need to update the AndroidManifest.xml file to denote that you're using noindex.html to block indexation. <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.example.android.Gizmos\"> <application> <activity android:name=\"com.example.android.GizmosActivity\" android:label=\"@string/title_gizmos\" > <intent-filter android:label=\"@string/filter_title_viewgizmos\"> <action android:name=\"android.intent.action.VIEW\"/> ... </activity> <meta-data android:name=\"search-engine\" android:resource=\"@xml/noindex\"/> </application> <uses-permission android:name=\"android.permission.INTERNET\"/> </manifest> App indexing API to drive re-engagement In addition to URI discovery via desktop crawl, your mobile app can integrate Google's App Indexing API, which communicates with Google when users take actions inside your app. This sends information to Google about what users are viewing in the app. This is an additional method for deep link discovery and has some benefits. The primary benefit is the ability to appear in autocomplete. This can drive re-engagement through Google Search query autocompletions, providing access to inner pages in apps. Again, be sure to verify your website and app following the guidelines here. This will verify your app in Google Play Developer Console and Google Webmaster Tools. App actions with knowledge graph The next, and most exciting, evolution of search is leveraging actions. These will be powerful when combined with voice search, allowing search engines to take action on behalf of users, turning spoken language into executed actions. App indexing allows you to take advantage of actions by allowing Google to not only launch an app, but execute actions inside of the app. Order me a pizza? Schedule my meeting? Drive my car? Ok, Google. App actions work via entity detection and the application of the knowledge graph, allowing search engines to understand actions, words, ideas and objects. With that understanding, they can build an action graph that allows them to define common actions by entity type. Here is a list of actions currently supported by Schema.org AchieveAction AssessAction ConsumeAction ControlAction CreateAction FindAction InteractAction MoveAction OrganizeAction PlayAction SearchAction TradeAction TransferAction UpdateAction For example, the PlayAction could be used to play a song in a music app. This can be achieve with the following markup. <script type=\"application/ld+json\"> { \"@context\": \"http://schema.org\", \"@type\": \"MusicGroup\", \"name\": \"Weezer\", \"potentialAction\": { \"@type\": \"ListenAction\", \"target\": \"android-app://com.spotify.music/http/we.../listen\" } }</script> Once this is implemented, these app actions can begin to appear in search results and knowledge graph. Overview of mobile app search opportunities In summary, there are five primary ways to increase visibility and engagement for your mobile app in traditional organic search efforts. The growth of mobile search is transforming how we define technical SEO, moving beyond front-end and back-end optimization of websites into the realm of structured data and application development. As app indexing expands to include iOS, I suspect the possibilities and opportunities associated with indexing applications, and their corresponding actions, to grow extensively. For those with Android apps, app indexing is a potential leapfrog style opportunity to get ahead of competitors who are dominant in traditional desktop search. Those with iOS devices should start by optimizing their app listings, while preparing to implement indexation, as I suspect it'll be released for iOS this year. Have you been leveraging traditional organic search to drive visibility and engagement for apps? Share your experiences in the comments below. Copied! Back to Top",
  "headers": [
    {
      "level": "H4",
      "text": "Discover top competitorsâ€™ winning content"
    },
    {
      "level": "H4",
      "text": "What is your Brand Authority?"
    },
    {
      "level": "H4",
      "text": "Unlock flexible pricing & new endpoints"
    },
    {
      "level": "H4",
      "text": "Surface actionable competitive intel"
    },
    {
      "level": "H1",
      "text": "Everything You Need to Know About Mobile App Search"
    },
    {
      "level": "H3",
      "text": "Table of Contents"
    },
    {
      "level": "H1",
      "text": "Everything You Need to Know About Mobile App Search"
    },
    {
      "level": "H2",
      "text": "Rise of mobile app search"
    },
    {
      "level": "H2",
      "text": "The mobile app pack"
    },
    {
      "level": "H3",
      "text": "Overview of differences in mobile app results"
    },
    {
      "level": "H2",
      "text": "Ranking in mobile app search results"
    },
    {
      "level": "H3",
      "text": "Basics of ASO"
    },
    {
      "level": "H3",
      "text": "Mobile app listing optimization"
    },
    {
      "level": "H4",
      "text": "Differences between ASO & mobile app SEO targeting"
    },
    {
      "level": "H3",
      "text": "App performance optimization"
    },
    {
      "level": "H4",
      "text": "App performance factors"
    },
    {
      "level": "H3",
      "text": "App web performance optimization"
    },
    {
      "level": "H2",
      "text": "App indexation - drive app engagement"
    },
    {
      "level": "H3",
      "text": "URI optimization for apps"
    },
    {
      "level": "H3",
      "text": "Adding intent filters"
    },
    {
      "level": "H4",
      "text": "Testing deep links"
    },
    {
      "level": "H3",
      "text": "App URI crawl and discovery"
    },
    {
      "level": "H4",
      "text": "Ways to get apps crawled"
    },
    {
      "level": "H5",
      "text": "#1: Rel=\"alternate\" in HTML head"
    },
    {
      "level": "H5",
      "text": "#2: ViewAction with Schema.org"
    },
    {
      "level": "H5",
      "text": "#3 Rel=\"alternate\" in XML sitemap"
    },
    {
      "level": "H2",
      "text": "Bot control and robots noindex for apps"
    },
    {
      "level": "H2",
      "text": "App indexing API to drive re-engagement"
    },
    {
      "level": "H2",
      "text": "App actions with knowledge graph"
    },
    {
      "level": "H2",
      "text": "Overview of mobile app search opportunities"
    },
    {
      "level": "H2",
      "text": "With Moz Pro, you have the tools you need to get SEO right â€” all in one place."
    },
    {
      "level": "H2",
      "text": "Read Next"
    },
    {
      "level": "H3",
      "text": "How to Optimize E-commerce Sitemaps with 1M+ Pages â€” Whiteboard Friday"
    },
    {
      "level": "H3",
      "text": "7 Ways SEO and Product Teams Can Collaborate to Ensure Success"
    },
    {
      "level": "H3",
      "text": "6 Things SEOs Should Advocate for When Building a Headless Website â€” Whiteboard Friday"
    },
    {
      "level": "H2",
      "text": "Comments"
    }
  ],
  "author": "Justin Briggs\n          \n            Justin Briggs\n          \n            Justin Briggs"
}