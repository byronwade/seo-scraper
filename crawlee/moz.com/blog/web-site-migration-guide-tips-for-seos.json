{
  "url": "https://moz.com/blog/web-site-migration-guide-tips-for-seos",
  "slug": "web-site-migration-guide-tips-for-seos",
  "title": "The Website Migration Guide: SEO Strategy, Process, & Checklist - MozMoz logoMenu openMenu closeSearchMoz logo",
  "description": "It's absolutely possible to migrate your site without suffering significant losses, if you do it carefully and correctly. This comprehensive guide covers the different types of site migrations, common pitfalls, a detailed 6-phase process to follow, and useful tools to use and download.",
  "content": "The Website Migration Guide: SEO Strategy, Process, & Checklist Technical SEO | Advanced SEO By: Modestos Siotos March 7, 2018 The author's views are entirely their own (excluding the unlikely event of hypnosis) and may not always reflect the views of Moz. Table of Contents Copied! By: Modestos Siotos March 7, 2018 The Website Migration Guide: SEO Strategy, Process, & Checklist Technical SEO | Advanced SEO The author's views are entirely their own (excluding the unlikely event of hypnosis) and may not always reflect the views of Moz. What is a site migration? A site migration is a term broadly used by SEO professionals to describe any event whereby a website undergoes substantial changes in areas that can significantly affect search engine visibility — typically changes to the site’s location, platform, structure, content, design, or UX. Google’s documentation on-site migrations doesn’t cover them in great depth and downplays the fact that so often they result in significant traffic and revenue loss, which can last from a few weeks to several months — depending on the extent search engine ranking signals have been affected, as well as how long it may take the affected business to rollout a successful recovery plan. Quick access links Site migration checklist (8-page PDF)Site migration examplesSite migration typesCommon site migration pitfallsSite migration process1. Scope & planning2. Pre-launch preparation3. Pre-launch testing4. Launch day actions5. Post-launch testing6. Performance reviewAppendix: Useful tools Site migration examples The following section discusses how both successful and unsuccessful site migrations look and explains why it is 100% possible to come out of a site migration without suffering significant losses. Debunking the “expected traffic drop” myth Anyone who has been involved with a site migration has probably heard the widespread theory that it will result in de facto traffic and revenue loss. Even though this assertion holds some truth for some very specific cases (i.e. moving from an established domain to a brand new one) it shouldn’t be treated as gospel. It is entirely possible to migrate without losing any traffic or revenue; you can even enjoy significant growth right after launching a revamped website. However, this can only be achieved if every single step has been well-planned and executed. Examples of unsuccessful site migrations The following graph illustrates a big UK retailer’s botched site migration where the website lost 35% of its visibility two weeks after switching from HTTP to HTTPS. It took them about six months to fully recover, which must have had a significant impact on revenue from organic search. This is a typical example of a poor site migration, possibly caused by poor planning or implementation. Example of a poor site migration — recovery took 6 months! But recovery may not always be possible. The below visibility graph is from another big UK retailer, where the HTTP to HTTPS switchover resulted in a permanent 20% visibility loss. Another example of a poor site migration — no signs of recovery 6 months on! In fact, it’s is entirely possible to migrate from HTTP to HTTPS without losing so much traffic and for so such a long period, aside from the first few weeks where there is high volatility as Google discovers the new URLs and updates search results. Examples of successful site migrations What does a successful site migration look like? This largely depends on the site migration type, the objectives, and the KPIs (more details later). But in most cases, a successful site migration shows at least one of the following characteristics: Minimal visibility loss during the first few weeks (short-term goal) Visibility growth thereafter — depending on the type of migration (long-term goal) The following visibility report is taken from an HTTP to HTTPS site migration, which was also accompanied by significant improvements to the site’s page loading times. The following visibility report is from a complete site overhaul, which I was fortunate to be involved with several months in advance and supported during the strategy, planning, and testing phases, all of which were equally important. As commonly occurs on-site migration projects, the launch date had to be pushed back a few times due to the risks of launching the new site prematurely and before major technical obstacles were fully addressed. But as you can see on the below visibility graph, the wait was well worth it. Organic visibility not only didn’t drop (as most would normally expect) but in fact, started growing from the first week. Visibility growth one month after the migration reached 60%, whilst organic traffic growth two months post-launch exceeded 80%. Example of a very successful site migration — instant growth following the new site launch! This was a rather complex migration as the new website was re-designed and built from scratch on a new platform with an improved site taxonomy that included new landing pages, an updated URL structure, lots of redirects to preserve link equity, plus a switchover from HTTP to HTTPS. In general, introducing too many changes at the same time can be tricky because if something goes wrong, you’ll struggle to figure out what exactly is at fault. But at the same time, leaving major changes for a later time isn’t ideal either as it will require more resources. If you know what you’re doing, making multiple positive changes at once can be very cost-effective. Before getting into the nitty-gritty of how you can turn a complex site migration project into a success, it’s important to run through the main site migration types as well as explain the main reasons so many site migrations fail. Site migration types There are many site migration types. It all depends on the nature of the changes that take place. Google’s documentation mostly covers migrations with site location changes, which are categorized as follows: Site moves with URL changes Site moves without URL changes Site move migrations These typically occur when a site moves to a different URL due to any of the below: Protocol change A classic example is when migrating from HTTP to HTTPS. Subdomain or subfolder change Very common in international SEO where a business decides to move one or more ccTLDs into subdomains or subfolders. Another common example is where a mobile site that sits on a separate subdomain or subfolder becomes responsive and both desktop and mobile URLs are uniformed. Domain name change Commonly occurs when a business is rebranding and must move from one domain to another. Top-level domain change This is common when a business decides to launch international websites and needs to move from a ccTLD (country code top-level domain) to a gTLD (generic top-level domain) or vice versa, e.g. moving from .co.uk to .com, or moving from .com to .co.uk and so on. Site structure changes These are changes to the site architecture that usually affect the site’s internal linking and URL structure. Other types of migrations There are other types of migration which are triggered by changes to the site’s content, structure, design, or platform. Replatforming This is the case when a website is moved from one platform/CMS to another, e.g. migrating from WordPress to Magento or just upgrading to the latest platform version. Replatforming can, in some cases, also result in design and URL changes because of technical limitations that often occur when changing platforms. This is why re-platforming migrations rarely result in a website that looks exactly the same as the previous one. Content migrations Major content changes such as content rewrites, content consolidation, or content pruning can have a big impact on a site’s organic search visibility, depending on the scale. These changes can often affect the site’s taxonomy, navigation, and internal linking. Mobile setup changes With so many options available for a site’s mobile setup moving, enabling app indexing, building an AMP site, or building a PWA website can also be considered as partial site migrations, especially when an existing mobile site is being replaced by an app, AMP, or PWA. Structural changes These are often caused by major changes to the site’s taxonomy that impact on the site navigation, internal linking and user journeys. Site redesigns These can vary from major design changes in the look and feel to a complete website revamp that may also include significant media, code, and copy changes. Hybrid migrations In addition to the above, there are several hybrid migration types that can be combined in practically any way possible. The more changes that get introduced at the same time the higher the complexity and the risks. Even though making too many changes at the same time increases the risks of something going wrong, it can be more cost-effective from a resources perspective if the migration is very well-planned and executed. Common site migration pitfalls Even though every site migration is different there are a few common themes behind the most typical site migration disasters, with the biggest being the following: Poor strategy Some site migrations are doomed to failure way before the new site is launched. A strategy that is built upon unclear and unrealistic objectives is much less likely to bring success. Establishing measurable objectives is essential in order to measure the impact of the migration post-launch. For most site migrations, the primary objective should be the retention of the site’s current traffic and revenue levels. In certain cases the bar could be raised higher, but in general anticipating or forecasting growth should be a secondary objective. This will help avoid creating unrealistic expectations. Poor planning Coming up with a detailed project plan as early as possible will help avoid delays along the way. Factor in additional time and resources to cope with any unforeseen circumstances that may arise. No matter how well thought out and detailed your plan is, it’s highly unlikely everything will go as expected. Be flexible with your plan and accept the fact that there will almost certainly be delays. Map out all dependencies and make all stakeholders aware of them. Avoid planning to launch the site near your seasonal peaks, because if anything goes wrong you won’t have enough time to rectify the issues. For instance, retailers should avoid launching a site close to September/October to avoid putting the busy pre-Christmas period at risk. In this case, it would be much wiser launching during the quieter summer months. Lack of resources Before committing to a site migration project, estimate the time and effort required to make it a success. If your budget is limited, make a call as to whether it is worth going ahead with a migration that is likely to fail in meeting its established objectives and cause revenue loss. As a rule of thumb, try to include a buffer of at least 20% in additional resource than you initially think the project will require. This additional buffer will later allow you to quickly address any issues as soon as they arise, without jeopardizing success. If your resources are too tight or you start cutting corners at this early stage, the site migration will be at risk. Lack of SEO/UX consultation When changes are taking place on a website, every single decision needs to be weighted from both a UX and SEO standpoint. For instance, removing great amounts of content or links to improve UX may damage the site’s ability to target business-critical keywords or result in crawling and indexing issues. In either case, such changes could damage the site’s organic search visibility. On the other hand, having too much text copy and few images may have a negative impact on user engagement and damage the site’s conversions. To avoid risks, appoint experienced SEO and UX consultants so they can discuss the potential consequences of every single change with key business stakeholders who understand the business intricacies better than anyone else. The pros and cons of each option need to be weighed before making any decision. Late involvement Site migrations can span several months, require great planning and enough time for testing. Seeking professional support late is very risky because crucial steps may have been missed. Lack of testing In addition to a great strategy and thoughtful plan, dedicate some time and effort for thorough testing before launching the site. It’s much more preferable to delay the launch if testing has identified critical issues rather than rushing a sketchy implementation into production. It goes without saying that you should not launch a website if it hasn’t been tested by both expert SEO and UX teams. Attention to detail is also very important. Make sure that the developers are fully aware of the risks associated with poor implementation. Educating the developers about the direct impact of their work on a site’s traffic (and therefore revenue) can make a big difference. Slow response to bug fixing There will always be bugs to fix once the new site goes live. However, some bugs are more important than others and may need immediate attention. For instance, launching a new site only to find that search engine spiders have trouble crawling and indexing the site’s content would require an immediate fix. A slow response to major technical obstacles can sometimes be catastrophic and take a long time to recover from. Underestimating scale Business stakeholders often do not anticipate site migrations to be so time-consuming and resource-heavy. It’s not uncommon for senior stakeholders to demand that the new site launch on the planned-for day, regardless of whether it’s 100% ready or not. The motto “let's launch ASAP and fix later” is a classic mistake. What most stakeholders are unaware of is that it can take just a few days for organic search visibility to tank, but recovery can take several months. It is the responsibility of the consultant and project manager to educate clients, run them through all the different phases and scenarios, and explain what each one entails. Business stakeholders are then able to make more informed decisions and their expectations should be easier to manage. Site migration process The site migration process can be split into six main essential phases. They are all equally important and skipping any of the below tasks could hinder the migration’s success to varying extents. Phase 1: Scope & Planning Work out the project scope Regardless of the reasons behind a site migration project, you need to be crystal clear about the objectives right from the beginning because these will help to set and manage expectations. Moving a site from HTTP to HTTPS is very different from going through a complete site overhaul, hence the two should have different objectives. In the first instance, the objective should be to retain the site’s traffic levels, whereas in the second you could potentially aim for growth. A site migration is a great opportunity to address legacy issues. Including as many of these as possible in the project scope should be very cost-effective because addressing these issues post-launch will require significantly more resources. However, in every case, identify the most critical aspects for the project to be successful. Identify all risks that could have a negative impact on the site’s visibility and consider which precautions to take. Ideally, prepare a few forecasting scenarios based on the different risks and growth opportunities. It goes without saying that the forecasting scenarios should be prepared by experienced site migration consultants. Including as many stakeholders as possible at this early stage will help you acquire a deeper understanding of the biggest challenges and opportunities across divisions. Ask for feedback from your content, SEO, UX, and Analytics teams and put together a list of the biggest issues and opportunities. You then need to work out what the potential ROI of addressing each one of these would be. Finally, choose one of the available options based on your objectives and available resources, which will form your site migration strategy. You should now be left with a prioritized list of activities which are expected to have a positive ROI, if implemented. These should then be communicated and discussed with all stakeholders, so you set realistic targets, agree on the project, scope and set the right expectations from the outset. Prepare the project plan Planning is equally important because site migrations can often be very complex projects that can easily span several months. During the planning phase, each task needs an owner (i.e. SEO consultant, UX consultant, content editor, web developer) and an expected delivery date. Any dependencies should be identified and included in the project plan so everyone is aware of any activities that cannot be fulfilled due to being dependent on others. For instance, the redirects cannot be tested unless the redirect mapping has been completed and the redirects have been implemented on staging. The project plan should be shared with everyone involved as early as possible so there is enough time for discussions and clarifications. Each activity needs to be described in great detail, so that stakeholders are aware of what each task would entail. It goes without saying that flawless project management is necessary in order to organize and carry out the required activities according to the schedule. A crucial part of the project plan is getting the anticipated launch date right. Ideally, the new site should be launched during a time when traffic is low. Again, avoid launching ahead of or during a peak period because the consequences could be devastating if things don’t go as expected. One thing to bear in mind is that as site migrations never go entirely to plan, a certain degree of flexibility will be required. Phase 2: Pre-launch preparation These include any activities that need to be carried out while the new site is still under development. By this point, the new site’s SEO requirements should have been captured already. You should be liaising with the designers and information architects, providing feedback on prototypes and wireframes well before the new site becomes available on a staging environment. Wireframes review Review the new site’s prototypes or wireframes before development commences. Reviewing the new site’s main templates can help identify both SEO and UX issues at an early stage. For example, you may find that large portions of content have been removed from the category pages, which should be instantly flagged. Or you may discover that some high traffic-driving pages no longer appear in the main navigation. Any radical changes in the design or copy of the pages should be thoroughly reviewed for potential SEO issues. Preparing the technical SEO specifications Once the prototypes and wireframes have been reviewed, prepare a detailed technical SEO specification. The objective of this vital document is to capture all the essential SEO requirements developers need to be aware of before working out the project’s scope in terms of work and costs. It’s during this stage that budgets are signed off on; if the SEO requirements aren’t included, it may be impossible to include them later down the line. The technical SEO specification needs to be very detailed, yet written in such a way that developers can easily turn the requirements into actions. This isn’t a document to explain why something needs to be implemented, but how it should be implemented. Make sure to include specific requirements that cover at least the following areas: URL structure Meta data (including dynamically generated default values) Structured data Canonicals and meta robots directives Copy & headings Main & secondary navigation Internal linking (in any form) Pagination XML sitemap(s) HTML sitemap Hreflang (if there are international sites) Mobile setup (including the app, AMP, or PWA site) Redirects Custom 404 page JavaScript, CSS, and image files Page loading times (for desktop & mobile) The specification should also include areas of the CMS functionality that allows users to: Specify custom URLs and override default ones Update page titles Update meta descriptions Update any h1–h6 headings Add or amend the default canonical tag Set the meta robots attributes to index/noindex/follow/nofollow Add or edit the alt text of each image Include Open Graph fields for description, URL, image, type, sitename Include Twitter Open Graph fields for card, URL, title, description, image Bulk upload or amend redirects Update the robots.txt file It is also important to make sure that when updating a particular attribute (e.g. an h1), other elements are not affected (i.e. the page title or any navigation menus). Identifying priority pages One of the biggest challenges with site migrations is that the success will largely depend on the quantity and quality of pages that have been migrated. Therefore, it’s very important to make sure that you focus on the pages that really matter. These are the pages that have been driving traffic to the legacy site, pages that have accrued links, pages that convert well, etc. In order to do this, you need to: Crawl the legacy site Identify all indexable pages Identify top performing pages How to crawl the legacy site Crawl the old website so that you have a copy of all URLs, page titles, meta data, headers, redirects, broken links etc. Regardless of the crawler application of choice (see Appendix), make sure that the crawl isn’t too restrictive. Pay close attention to the crawler’s settings before crawling the legacy site and consider whether you should: Ignore robots.txt (in case any vital parts are accidentally blocked) Follow internal “nofollow” links (so the crawler reaches more pages) Crawl all subdomains (depending on scope) Crawl outside start folder (depending on scope) Change the user agent to Googlebot (desktop) Change the user agent to Googlebot (smartphone) Pro tip: Keep a copy of the old site’s crawl data (in a file or on the cloud) for several months after the migration has been completed, just in case you ever need any of the old site’s data once the new site has gone live. How to identify the indexable pages Once the crawl is complete, work on identifying the legacy site’s indexed pages. These are any HTML pages with the following characteristics: Return a 200 server response Either do not have a canonical tag or have a self-referring canonical URL Do not have a meta robots noindex Aren’t excluded from the robots.txt file Are internally linked from other pages (non-orphan pages) The indexable pages are the only pages that have the potential to drive traffic to the site and therefore need to be prioritized for the purposes of your site migration. These are the pages worth optimizing (if they will exist on the new site) or redirecting (if they won’t exist on the new site). How to identify the top performing pages Once you’ve identified all indexable pages, you may have to carry out more work, especially if the legacy site consists of a large number of pages and optimizing or redirecting all of them is impossible due to time, resource, or technical constraints. If this is the case, you should identify the legacy site’s top performing pages. This will help with the prioritization of the pages to focus on during the later stages. It’s recommended to prepare a spreadsheet that includes the below fields: Legacy URL (include only the indexable ones from the craw data) Organic visits during the last 12 months (Analytics) Revenue, conversions, and conversion rate during the last 12 months (Analytics) Pageviews during the last 12 months (Analytics) Number of clicks from the last 90 days (Search Console) Top linked pages (Majestic SEO/Ahrefs) With the above information in one place, it’s now much easier to identify your most important pages: the ones that generate organic visits, convert well, contribute to revenue, have a good number of referring domains linking to them, etc. These are the pages that you must focus on for a successful site migration. The top performing pages should ideally also exist on the new site. If for any reason they don’t, they should be redirected to the most relevant page so that users requesting them do not land on 404 pages and the link equity they previously had remains on the site. If any of these pages cease to exist and aren’t properly redirected, your site’s rankings and traffic will negatively be affected. Benchmarking Once the launch of the new website is getting close, you should benchmark the legacy site’s performance. Benchmarking is essential, not only to compare the new site’s performance with the previous one but also to help diagnose which areas underperform on the new site and to quickly address them. Keywords rank tracking If you don’t track the site’s rankings frequently, you should do so just before the new site goes live. Otherwise, you will later struggle figuring out whether the migration has gone smoothly or where exactly things went wrong. Don’t leave this to the last minute in case something goes awry — a week in advance would be the ideal time. Spend some time working out which keywords are most representative of the site’s organic search visibility and track them across desktop and mobile. Because monitoring thousands of head, mid-, and long-tail keyword combinations is usually unrealistic, the bare minimum you should monitor are keywords that are driving traffic to the site (keywords ranking on page one) and have decent search volume (head/mid-tail focus) If you do get traffic from both brand and non-brand keywords, you should also decide which type of keywords to focus on more from a tracking POV. In general, non-brand keywords tend to be more competitive and volatile. For most sites it would make sense to focus mostly on these. Don’t forget to track rankings across desktop and mobile. This will make it much easier to diagnose problems post-launch should there be performance issues on one device type. If you receive a high volume of traffic from more than one country, consider rank tracking keywords in other markets, too, because visibility and rankings can vary significantly from country to country. Site performance The new site’s page loading times can have a big impact on both traffic and sales. Several studies have shown that the longer a page takes to load, the higher the bounce rate. Unless the old site’s page loading times and site performance scores have been recorded, it will be very difficult to attribute any traffic or revenue loss to site performance related issues once the new site has gone live. It’s recommended that you review all major page types using Google’s PageSpeed Insights and Lighthouse tools. You could use summary tables like the ones below to benchmark some of the most important performance metrics, which will be useful for comparisons once the new site goes live. MOBILE Speed FCP DCL Optimization Optimization score Homepage Fast 0.7s 1.4s Good 81/100 Category page Slow 1.8s 5.1s Medium 78/100 Subcategory page Average 0.9s 2.4s Medium 69/100 Product page Slow 1.9s 5.5s Good 83/100 DESKTOP Speed FCP DCL Optimization Optimization score Homepage Good 0.7s 1.4s Average 81/100 Category page Fast 0.6s 1.2s Medium 78/100 Subcategory page Fast 0.6s 1.3s Medium 78/100 Product page Good 0.8s 1.3s Good 83/100 Old site crawl data A few days before the new site replaces the old one, run a final crawl of the old site. Doing so could later prove invaluable, should there be any optimization issues on the new site. A final crawl will allow you to save vital information about the old site’s page titles, meta descriptions, h1–h6 headings, server status, canonical tags, noindex/nofollow pages, inlinks/outlinks, level, etc. Having all this information available could save you a lot of trouble if, say, the new site isn’t well optimized or suffers from technical misconfiguration issues. Try also to save a copy of the old site’s robots.txt and XML sitemaps in case you need these later. Search Console data Also consider exporting as much of the old site’s Search Console data as possible. These are only available for 90 days, and chances are that once the new site goes live the old site’s Search Console data will disappear sooner or later. Data worth exporting includes: Search analytics queries & pages Crawl errors Blocked resources Mobile usability issues URL parameters Structured data errors Links to your site Internal links Index status Redirects preparation The redirects implementation is one of the most crucial activities during a site migration. If the legacy site’s URLs cease to exist and aren’t correctly redirected, the website’s rankings and visibility will simply tank. Why are redirects important in site migrations? Redirects are extremely important because they help both search engines and users find pages that may no longer exist, have been renamed, or moved to another location. From an SEO point of view, redirects help search engines discover and index a site’s new URLs quicker but also understand how the old site’s pages are associated with the new site’s pages. This association will allow for ranking signals to pass from the old pages to the new ones, so rankings are retained without being negatively affected. What happens when redirects aren’t correctly implemented? When redirects are poorly implemented, the consequences can be catastrophic. Users will either land on Not Found pages (404s) or irrelevant pages that do not meet the user intent. In either case, the site’s bounce and conversion rates will be negatively affected. The consequences for search engines can be equally catastrophic: they’ll be unable to associate the old site’s pages with those on the new site if the URLs aren’t identical. Ranking signals won’t be passed over from the old to the new site, which will result in ranking drops and organic search visibility loss. In addition, it will take search engines longer to discover and index the new site’s pages. 301, 302, JavaScript redirects, or meta refresh? When the URLs between the old and new version of the site are different, use 301 (permanent) redirects. These will tell search engines to index the new URLs as well as forward any ranking signals from the old URLs to the new ones. Therefore, you must use 301 redirects if your site moves to/from another domain/subdomain, if you switch from HTTP to HTTPS, or if the site or parts of it have been restructured. Despite some of Google’s claims that 302 redirects pass PageRank, indexing the new URLs would be slower and ranking signals could take much longer to be passed on from the old to the new page. 302 (temporary) redirects should only be used in situations where a redirect does not need to live permanently and therefore indexing the new URL isn’t a priority. With 302 redirects, search engines will initially be reluctant to index the content of the redirect destination URL and pass any ranking signals to it. However, if the temporary redirects remain for a long period of time without being removed or updated, they could end up behaving similarly to permanent (301) redirects. Use 302 redirects when a redirect is likely to require updating or removal in the near future, as well as for any country-, language-, or device-specific redirects. Meta refresh and JavaScript redirects should be avoided. Even though Google is getting better and better at crawling JavaScript, there are no guarantees these will get discovered or pass ranking signals to the new pages. If you’d like to find out more about how Google deals with the different types of redirects, please refer to John Mueller’s post. Redirect mapping process If you are lucky enough to work on a migration that doesn’t involve URL changes, you could skip this section. Otherwise, read on to find out why any legacy pages that won’t be available on the same URL after the migration should be redirected. The redirect mapping file is a spreadsheet that includes the following two columns: Legacy site URL –> a page’s URL on the old site. New site URL –> a page’s URL on the new site. When mapping (redirecting) a page from the old to the new site, always try mapping it to the most relevant corresponding page. In cases where a relevant page doesn’t exist, avoid redirecting the page to the homepage. First and foremost, redirecting users to irrelevant pages results in a very poor user experience. Google has stated that redirecting pages “en masse” to irrelevant pages will be treated as soft 404s and because of this won’t be passing any SEO value. If you can’t find an equivalent page on the new site, try mapping it to its parent category page. Once the mapping is complete, the file will need to be sent to the development team to create the redirects, so that these can be tested before launching the new site. The implementation of redirects is another part in the site migration cycle where things can often go wrong. Increasing efficiencies during the redirect mapping process Redirect mapping requires great attention to detail and needs to be carried out by experienced SEOs. The URL mapping on small sites could in theory be done by manually mapping each URL of the legacy site to a URL on the new site. But on large sites that consist of thousands or even hundreds of thousands of pages, manually mapping every single URL is practically impossible and automation needs to be introduced. Relying on certain common attributes between the legacy and new site can be a massive time-saver. Such attributes may include the page titles, H1 headings, or other unique page identifiers such as product codes, SKUs etc. Make sure the attributes you rely on for the redirect mapping are unique and not repeated across several pages; otherwise, you will end up with incorrect mapping. Pro tip: Make sure the URL structure of the new site is 100% finalized on staging before you start working on the redirect mapping. There’s nothing riskier than mapping URLs that will be updated before the new site goes live. When URLs are updated after the redirect mapping is completed, you may have to deal with undesired situations upon launch, such as broken redirects, redirect chains, and redirect loops. A content-freeze should be placed on the old site well in advance of the migration date, so there is a cut-off point for new content being published on the old site. This will make sure that no pages will be missed from the redirect mapping and guarantee that all pages on the old site get redirected. Don’t forget the legacy redirects! You should get hold of the old site’s existing redirects to ensure they’re considered when preparing the redirect mapping for the new site. Unless you do this, it’s likely that the site’s current redirect file will get overwritten by the new one on the launch date. If this happens, all legacy redirects that were previously in place will cease to exist and the site may lose a decent amount of link equity, the extent of which will largely depend on the site’s volume of legacy redirects. For instance, a site that has undergone a few migrations in the past should have a good number of legacy redirects in place that you don’t want getting lost. Ideally, preserve as many of the legacy redirects as possible, making sure these won’t cause any issues when combined with the new site’s redirects. It’s strongly recommended to eliminate any potential redirect chains at this early stage, which can easily be done by checking whether the same URL appears both as a “Legacy URL” and “New site URL” in the redirect mapping spreadsheet. If this is the case, you will need to update the “New site URL” accordingly. Example: URL A redirects to URL B (legacy redirect) URL B redirects to URL C (new redirect) Which results in the following redirect chain: URL A –> URL B –> URL C To eliminate this, amend the existing legacy redirect and create a new one so that: URL A redirects to URL C (amended legacy redirect) URL B redirects to URL C (new redirect) Pro tip: Check your redirect mapping spreadsheet for redirect loops. These occur when the “Legacy URL” is identical to the “new site URL.” Redirect loops need to be removed because they result in infinitely loading pages that are inaccessible to users and search engines. Redirect loops must be eliminated because they are instant traffic, conversion, and ranking killers! Implement blanket redirect rules to avoid duplicate content It’s strongly recommended to try working out redirect rules that cover as many URL requests as possible. Implementing redirect rules on a web server is much more efficient than relying on numerous one-to-one redirects. If your redirect mapping document consists of a very large number of redirects that need to be implemented as one-to-one redirect rules, site performance could be negatively affected. In any case, double check with the development team the maximum number of redirects the web server can handle without issues. In any case, there are some standard redirect rules that should be in place to avoid generating duplicate content issues: URL case: All URLs containing upper-case characters should be 301 redirected to all lower-case URLs, e.g. https://www.website.com/Page/ should be automatically redirecting to https://www.website.com/page/ Host: For instance, all non-www URLs should be 301 redirected to their www equivalent, e.g. https://website.com/page/ should be redirected to https://www.website.com/page/ Protocol: On a secure website, requests for HTTP URLs should be redirected to the equivalent HTTPS URL, e.g. http://www.website.com/page/\" class=\"redactor-autoparser-object\">http://www.website.com/page/ should automatically redirect to https://www.website.com/page/ Trailing slash: For instance, any URLs not containing a trailing slash should redirect to a version with a trailing slash, e.g. http://www.website.com/page should redirect to http://www.website.com/page/\" class=\"redactor-autoparser-object\">http://www.website.com/page/ Even if some of these standard redirect rules exist on the legacy website, do not assume they’ll necessarily exist on the new site unless they’re explicitly requested. Avoid internal redirects Try updating the site’s internal links so they don’t trigger internal redirects. Even though search engines can follow internal redirects, these are not recommended because they add additional latency to page loading times and could also have a negative impact on search engine crawl time. Don’t forget your image files If the site’s images have moved to a new location, Google recommends redirecting the old image URLs to the new image URLs to help Google discover and index the new images quicker. If it’s not easy to redirect all images, aim to redirect at least those image URLs that have accrued backlinks. Phase 3: Pre-launch testing The earlier you can start testing, the better. Certain things need to be fully implemented to be tested, but others don’t. For example, user journey issues could be identified from as early as the prototypes or wireframes design. Content-related issues between the old and new site or content inconsistencies (e.g. between the desktop and mobile site) could also be identified at an early stage. But the more technical components should only be tested once fully implemented — things like redirects, canonical tags, or XML sitemaps. The earlier issues get identified, the more likely it is that they’ll be addressed before launching the new site. Identifying certain types of issues at a later stage isn’t cost effective, would require more resources, and cause significant delays. Poor testing and not allowing the time required to thoroughly test all building blocks that can affect SEO and UX performance can have disastrous consequences soon after the new site has gone live. Making sure search engines cannot access the staging/test site Before making the new site available on a staging/testing environment, take some precautions that search engines do not index it. There are a few different ways to do this, each with different pros and cons. Site available to specific IPs (most recommended) Making the test site available only to specific (whitelisted) IP addresses is a very effective way to prevent search engines from crawling it. Anyone trying to access the test site’s URL won’t be able to see any content unless their IP has been whitelisted. The main advantage is that whitelisted users could easily access and crawl the site without any issues. The only downside is that third-party web-based tools (such as Google’s tools) cannot be used because of the IP restrictions. Password protection Password protecting the staging/test site is another way to keep search engine crawlers away, but this solution has two main downsides. Depending on the implementation, it may not be possible to crawl and test a password-protected website if the crawler application doesn’t make it past the login screen. The other downside: password-protected websites that use forms for authentication can be crawled using third-party applications, but there is a risk of causing severe and unexpected issues. This is because the crawler clicks on every link on a page (when you’re logged in) and could easily end up clicking on links that create or remove pages, install/uninstall plugins, etc. Robots.txt blocking Adding the following lines of code to the test site’s robots.txt file will prevent search engines from crawling the test site’s pages. User-agent: * Disallow: / One downside of this method is that even though the content that appears on the test server won’t get indexed, the disallowed URLs may appear on Google’s search results. Another downside is that if the above robots.txt file moves into the live site, it will cause severe de-indexing issues. This is something I’ve encountered numerous times and for this reason I wouldn’t recommend using this method to block search engines. User journey review If the site has been redesigned or restructured, chances are that the user journeys will be affected to some extent. Reviewing the user journeys as early as possible and well before the new site launches is difficult due to the lack of user data. However, an experienced UX professional will be able to flag any concerns that could have a negative impact on the site’s conversion rate. Because A/B testing at this stage is hardly ever possible, it might be worth carrying out some user testing and try to get some feedback from real users. Unfortunately, user experience issues can be some of the harder ones to address because they may require sitewide changes that take a lot of time and effort. On full site overhauls, not all UX decisions can always be backed up by data and many decisions will have to be based on best practice, past experience, and “gut feeling,” hence getting UX/CRO experts involved as early as possible could pay dividends later. Site architecture review A site migration is often a great opportunity to improve the site architecture. In other words, you have a great chance to reorganize your keyword targeted content and maximize its search traffic potential. Carrying out extensive keyword research will help identify the best possible category and subcategory pages so that users and search engines can get to any page on the site within a few clicks — the fewer the better, so you don’t end up with a very deep taxonomy. Identifying new keywords with decent traffic potential and mapping them into new landing pages can make a big difference to the site’s organic traffic levels. On the other hand, enhancing the site architecture needs to be done thoughtfully. Itt could cause problems if, say, important pages move deeper into the new site architecture or there are too many similar pages optimized for the same keywords. Some of the most successful site migrations are the ones that allocate significant resources to enhance the site architecture. Meta data & copy review Make sure that the site’s page titles, meta descriptions, headings, and copy have been transferred from the old to the new site without issues. If you’ve created any new pages, make sure these are optimized and don’t target keywords that have already been targeted by other pages. If you’re re-platforming, be aware that the new platform may have different default values when new pages are being created. Launching the new site without properly optimized page titles or any kind of missing copy will have an immediate negative impact on your site’s rankings and traffic. Do not forget to review whether any user-generated content (i.e. user reviews, comments) has also been uploaded. Internal linking review Internal links are the backbone of a website. No matter how well optimized and structured the site’s copy is, it won’t be sufficient to succeed unless it’s supported by a flawless internal linking scheme. Internal links must be reviewed throughout the entire site, including links found in: Main & secondary navigation Header & footer links Body content links Pagination links Horizontal links (related articles, similar products, etc) Vertical links (e.g. breadcrumb navigation) Cross-site links (e.g. links across international sites) Technical checks A series of technical checks must be carried out to make sure the new site’s technical setup is sound and to avoid coming across major technical glitches after the new site has gone live. Robots.txt file review Prepare the new site’s robots.txt file on the staging environment. This way you can test it for errors or omissions and avoid experiencing search engine crawl issues when the new site goes live. A classic mistake in site migrations is when the robots.txt file prevents search engine access using the following directive: Disallow: / If this gets accidentally carried over into the live site (and it often does), it will prevent search engines from crawling the site. And when search engines cannot crawl an indexed page, the keywords associated with the page will get demoted in the search results and eventually the page will get de-indexed. But if the robots.txt file on staging is populated with the new site’s robots.txt directives, this mishap could be avoided. When preparing the new site’s robots.txt file, make sure that: It doesn’t block search engine access to pages that are intended to get indexed. It doesn’t block any JavaScript or CSS resources search engines require to render page content. The legacy site’s robots.txt file content has been reviewed and carried over if necessary. It references the new XML sitemaps(s) rather than any legacy ones that no longer exist. Canonical tags review Review the site’s canonical tags. Look for pages that either do not have a canonical tag or have a canonical tag that is pointing to another URL and question whether this is intended. Don’t forget to crawl the canonical tags to find out whether they return a 200 server response. If they don’t you will need to update them to eliminate any 3xx, 4xx, or 5xx server responses. You should also look for pages that have a canonical tag pointing to another URL combined with a noindex directive, because these two are conflicting signals and you;’ll need to eliminate one of them. Meta robots review Once you’ve crawled the staging site, look for pages with the meta robots properties set to “noindex” or “nofollow.” If this is the case, review each one of them to make sure this is intentional and remove the “noindex” or “nofollow” directive if it isn’t. XML sitemaps review Prepare two different types of sitemaps: one that contains all the new site’s indexable pages, and another that includes all the old site’s indexable pages. The former will help make Google aware of the new site’s indexable URLs. The latter will help Google become aware of the redirects that are in place and the fact that some of the indexed URLs have moved to new locations, so that it can discover them and update search results quicker. You should check each XML sitemap to make sure that: It validates without issues It is encoded as UTF-8 It does not contain more than 50,000 rows Its size does not exceed 50MBs when uncompressed If there are more than 50K rows or the file size exceeds 50MB, you must break the sitemap down into smaller ones. This prevents the server from becoming overloaded if Google requests the sitemap too frequently. In addition, you must crawl each XML sitemap to make sure it only includes indexable URLs. Any non-indexable URLs should be excluded from the XML sitemaps, such as: 3xx, 4xx, and 5xx pages (e.g. redirected, not found pages, bad requests, etc) Soft 404s. These are pages with no content that return a 200 server response, instead of a 404. Canonicalized pages (apart from self-referring canonical URLs) Pages with a meta robots noindex directive <!DOCTYPE html> <html><head> <meta name=\"robots\" content=\"noindex\" /> (…) </head> <body>(…)</body> </html> Pages with a noindex X-Robots-Tag in the HTTP header HTTP/1.1 200 OK Date: Tue, 10 Nov 2017 17:12:43 GMT (…) X-Robots-Tag: noindex (…) Pages blocked from the robots.txt file Building clean XML sitemaps can help monitor the true indexing levels of the new site once it goes live. If you don’t, it will be very difficult to spot any indexing issues. Pro tip: Download and open each XML sitemap in Excel to get a detailed overview of any additional attributes, such as hreflang or image attributes. HTML sitemap review Depending on the size and type of site that is being migrated, having an HTML sitemap can in certain cases be beneficial. An HTML sitemap that consists of URLs that aren’t linked from the site’s main navigation can significantly boost page discovery and indexing. However, avoid generating an HTML sitemap that includes too many URLs. If you do need to include thousands of URLs, consider building a segmented HTML sitemap. The number of nested sitemaps as well as the maximum number of URLs you should include in each sitemap depends on the site’s authority. The more authoritative a website, the higher the number of nested sitemaps and URLs it could get away with. For example, the NYTimes.com HTML sitemap consists of three levels, where each one includes over 1,000 URLs per sitemap. These nested HTML sitemaps aid search engine crawlers in discovering articles published since 1851 that otherwise would be difficult to discover and index, as not all of them would have been internally linked. The NYTimes HTML sitemap (level 1) The NYTimes HTML sitemap (level 2) Structured data review Errors in the structured data markup need to be identified early so there’s time to fix them before the new site goes live. Ideally, you should test every single page template (rather than every single page) using Google’s Structured Data Testing tool. Be sure to check the markup on both the desktop and mobile pages, especially if the mobile website isn’t responsive. The tool will only report any existing errors but not omissions. For example, if your product page template does not include the Product structured data schema, the tool won’t report any errors. So, in addition to checking for errors you should also make sure that each page template includes the appropriate structured data markup for its content type. Please refer to Google’s documentation for the most up to date details on the structured data implementation and supported content types. JavaScript crawling review You must test every single page template of the new site to make sure Google will be able to crawl content that requires JavaScript parsing. If you’re able to use Google’s Fetch and Render tool on your staging site, you should definitely do so. Otherwise, carry out some manual tests, following Justin Brigg’s advice. As Bartosz Góralewicz’s tests proved, even if Google is able to crawl and index JavaScript-generated content, it does not mean that it is able to crawl JavaScript content across all major JavaScript frameworks. The following table summarizes Bartosz’s findings, showing that some JavaScript frameworks are not SEO-friendly, with AngularJS currently being the most problematic of all. Bartosz also found that other search engines (such as Bing, Yandex, and Baidu) really struggle with indexing JavaScript-generated content, which is important to know if your site’s traffic relies on any of these search engines. Hopefully, this is something that will improve over time, but with the increasing popularity of JavaScript frameworks in web development, this must be high up on your checklist. Finally, you should check whether any external resources are being blocked. Unfortunately, this isn’t something you can control 100% because many resources (such as JavaScript and CSS files) are hosted by third-party websites which may be blocking them via their own robots.txt files! Again, the Fetch and Render tool can help diagnose this type of issue that, if left unresolved, could have a significant negative impact. Mobile site SEO review Assets blocking review First, make sure that the robots.txt file isn’t accidentally blocking any JavaScript, CSS, or image files that are essential for the mobile site’s content to render. This could have a negative impact on how search engines render and index the mobile site’s page content, which in turn could negatively affect the mobile site’s search visibility and performance. Mobile-first index review In order to avoid any issues associated with Google’s mobile-first index, thoroughly review the mobile website and make there aren’t any inconsistencies between the desktop and mobile sites in the following areas: Page titles Meta descriptions Headings Copy Canonical tags Meta robots attributes (i.e. noindex, nofollow) Internal links Structured data A responsive website should serve the same content, links, and markup across devices, and the above SEO attributes should be identical across the desktop and mobile websites. In addition to the above, you must carry out a few further technical checks depending on the mobile site’s set up. Responsive site review A responsive website must serve all devices the same HTML code, which is adjusted (via the use of CSS) depending on the screen size. Googlebot is able to automatically detect this mobile setup as long as it’s allowed to crawl the page and its assets. It’s therefore extremely important to make sure that Googlebot can access all essential assets, such as images, JavaScript, and CSS files. To signal browsers that a page is responsive, a meta=\"viewport\" tag should be in place within the <head> of each HTML page. <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> If the meta viewport tag is missing, font sizes may appear in an inconsistent manner, which may cause Google to treat the page as not mobile-friendly. Separate mobile URLs review If the mobile website uses separate URLs from desktop, make sure that: Each desktop page has a tag pointing to the corresponding mobile URL. Each mobile page has a rel=\"canonical\" tag pointing to the corresponding desktop URL. When desktop URLs are requested on mobile devices, they’re redirected to the respective mobile URL. Redirects work across all mobile devices, including Android, iPhone, and Windows phones. There aren’t any irrelevant cross-links between the desktop and mobile pages. This means that internal links on found on a desktop page should only link to desktop pages and those found on a mobile page should only link to other mobile pages. The mobile URLs return a 200 server response. Dynamic serving review Dynamic serving websites serve different code to each device, but on the same URL. On dynamic serving websites, review whether the vary HTTP header has been correctly set up. This is necessary because dynamic serving websites alter the HTML for mobile user agents and the vary HTTP header helps Googlebot discover the mobile content. Mobile-friendliness review Regardless of the mobile site set-up (responsive, separate URLs or dynamic serving), review the pages using a mobile user-agent and make sure that: The viewport has been set correctly. Using a fixed width viewport across devices will cause mobile usability issues. The font size isn’t too small. Touch elements (i.e. buttons, links) aren’t too close. There aren’t any intrusive interstitials, such as Ads, mailing list sign-up forms, App Download pop-ups etc. To avoid any issues, you should use either use a small HTML or image banner. Mobile pages aren’t too slow to load (see next section). Google’s mobile-friendly test tool can help diagnose most of the above issues: Google’s mobile-friendly test tool in action AMP site review If there is an AMP website and a desktop version of the site is available, make sure that: Each non-AMP page (i.e. desktop, mobile) has a tag pointing to the corresponding AMP URL. Each AMP page has a rel=\"canonical\" tag pointing to the corresponding desktop page. Any AMP page that does not have a corresponding desktop URL has a self-referring canonical tag. You should also make sure that the AMPs are valid. This can be tested using Google’s AMP Test Tool. Mixed content errors With Google pushing hard for sites to be fully secure and Chrome becoming the first browser to flag HTTP pages as not secure, aim to launch the new site on HTTPS, making sure all resources such as images, CSS and JavaScript files are requested over secure HTTPS connections.This is essential in order to avoid mixed content issues. Mixed content occurs when a page that’s loaded over a secure HTTPS connection requests assets over insecure HTTP connections. Most browsers either block dangerous HTTP requests or just display warnings that hinder the user experience. Mixed content errors in Chrome’s JavaScript Console There are many ways to identify mixed content errors, including the use of crawler applications, Google’s Lighthouse, etc. Image assets review Google crawls images less frequently than HTML pages. If migrating a site’s images from one location to another (e.g. from your domain to a CDN), there are ways to aid Google in discovering the migrated images quicker. Building an image XML sitemap will help, but you also need to make sure that Googlebot can reach the site’s images when crawling the site. The tricky part with image indexing is that both the web page where an image appears on as well as the image file itself have to get indexed. Site performance review Last but not least, measure the old site’s page loading times and see how these compare with the new site’s when this becomes available on staging. At this stage, focus on the network-independent aspects of performance such as the use of external resources (images, JavaScript, and CSS), the HTML code, and the web server’s configuration. More information about how to do this is available further down. Analytics tracking review Make sure that analytics tracking is properly set up. This review should ideally be carried out by specialist analytics consultants who will look beyond the implementation of the tracking code. Make sure that Goals and Events are properly set up, e-commerce tracking is implemented, enhanced e-commerce tracking is enabled, etc. There’s nothing more frustrating than having no analytics data after your new site is launched. Redirects testing Testing the redirects before the new site goes live is critical and can save you a lot of trouble later. There are many ways to check the redirects on a staging/test server, but the bottom line is that you should not launch the new website without having tested the redirects. Once the redirects become available on the staging/testing environment, crawl the entire list of redirects and check for the following issues: Redirect loops (a URL that infinitely redirects to itself) Redirects with a 4xx or 5xx server response. Redirect chains (a URL that redirects to another URL, which in turn redirects to another URL, etc). Canonical URLs that return a 4xx or 5xx server response. Canonical loops (page A has a canonical pointing to page B, which has a canonical pointing to page A). Canonical chains (a canonical that points to another page that has a canonical pointing to another page, etc). Protocol/host inconsistencies e.g. URLs are redirected to both HTTP and HTTPS URLs or www and non-www URLs. Leading/trailing whitespace characters. Use trim() in Excel to eliminate them. Invalid characters in URLs. Pro tip: Make sure one of the old site’s URLs redirects to the correct URL on the new site. At this stage, because the new site doesn’t exist yet, you can only test whether the redirect destination URL is the intended one, but it’s definitely worth it. The fact that a URL redirects does not mean it redirects to the right page. Phase 4: Launch day activities When the site is down... While the new site is replacing the old one, chances are that the live site is going to be temporarily down. The downtime should be kept to a minimum, but while this happens the web server should respond to any URL request with a 503 (service unavailable) server response. This will tell search engine crawlers that the site is temporarily down for maintenance so they come back to crawl the site later. If the site is down for too long without serving a 503 server response and search engines crawl the website, organic search visibility will be negatively affected and recovery won’t be instant once the site is back up. In addition, while the website is temporarily down it should also serve an informative holding page notifying users that the website is temporarily down for maintenance. Technical spot checks As soon as the new site has gone live, take a quick look at: The robots.txt file to make sure search engines are not blocked from crawling Top pages redirects (e.g. do requests for the old site’s top pages redirect correctly?) Top pages canonical tags Top pages server responses Noindex/nofollow directives, in case they are unintentional The spot checks need to be carried out across both the mobile and desktop sites, unless the site is fully responsive. Search Console actions The following activities should take place as soon as the new website has gone live: Test & upload the XML sitemap(s) Set the Preferred location of the domain (www or non-www) Set the International targeting (if applicable) Configure the URL parameters to tackle early any potential duplicate content issues. Upload the Disavow file (if applicable) Use the Change of Address tool (if switching domains) Pro tip: Use the “Fetch as Google” feature for each different type of page (e.g. the homepage, a category, a subcategory, a product page) to make sure Googlebot can render the pages without any issues. Review any reported blocked resources and do not forget to use Fetch and Render for desktop and mobile, especially if the mobile website isn’t responsive. Blocked resources prevent Googlebot from rendering the content of the page Phase 5: Post-launch review Once the new site has gone live, a new round of in-depth checks should be carried out. These are largely the same ones as those mentioned in the “Phase 3: Pre-launch Testing” section. However, the main difference during this phase is that you now have access to a lot more data and tools. Don’t underestimate the amount of effort you’ll need to put in during this phase, because any issues you encounter now directly impacts the site’s performance in the SERPs. On the other hand, the sooner an issue gets identified, the quicker it will get resolved. In addition to repeating the same testing tasks that were outlined in the Phase 3 section, in certain areas things can be tested more thoroughly, accurately, and in greater detail. You can now take full advantage of the Search Console features. Check crawl stats and server logs Keep an eye on the crawl stats available in the Search Console, to make sure Google is crawling the new site’s pages. In general, when Googlebot comes across new pages it tends to accelerate the average number of pages it crawls per day. But if you can’t spot a spike around the time of the launch date, something may be negatively affecting Googlebot’s ability to crawl the site. Crawl stats on Google’s Search Console Reviewing the server log files is by far the most effective way to spot any crawl issues or inefficiencies. Tools like Botify and On Crawl can be extremely useful because they combine crawls with server log data and can highlight pages search engines do not crawl, pages that are not linked to internally (orphan pages), low-value pages that are heavily internally linked, and a lot more. Review crawl errors regularly Keep an eye on the reported crawl errors, ideally daily during the first few weeks. Downloading these errors daily, crawling the reported URLs, and taking the necessary actions (i.e. implement additional 301 redirects, fix soft 404 errors) will aid a quicker recovery. It’s highly unlikely you will need to redirect every single 404 that is reported, but you should add redirects for the most important ones. Pro tip: In Google Analytics you can easily find out which are the most commonly requested 404 URLs and fix these first! Other useful Search Console features Other Search Console features worth checking include the Blocked Resources, Structured Data errors, Mobile Usability errors, HTML Improvements, and International Targeting (to check for hreflang reported errors). Pro tip: Keep a close eye on the URL parameters in case they’re causing duplicate content issues. If this is the case, consider taking some urgent remedial action. Measuring site speed Once the new site is live, measure site speed to make sure the site’s pages are loading fast enough on both desktop and mobile devices. With site speed being a ranking signal across devices and becauseslow pages lose users and customers, comparing the new site’s speed with the old site’s is extremely important. If the new site’s page loading times appear to be higher you should take some immediate action, otherwise your site’s traffic and conversions will almost certainly take a hit. Evaluating speed using Google’s tools Two tools that can help with this are Google’s Lighthouse and Pagespeed Insights. The Pagespeed Insights Tool measures page performance on both mobile and desktop devices and shows real-world page speed data based on user data Google collects from Chrome. It also checks to see if a page has applied common performance best practices and provides an optimization score. The tool includes the following main categories: Speed score: Categorizes a page as Fast, Average, or Slow using two metrics: The First Contentful Paint (FCP) and DOM Content Loaded (DCL). A page is considered fast if both metrics are in the top one-third of their category. Optimization score: Categorizes a page as Good, Medium, or Low based on performance headroom. Page load distributions: Categorizes a page as Fast (fastest third), Average (middle third), or Slow (bottom third) by comparing against all FCP and DCL events in the Chrome User Experience Report. Page stats: Can indicate if the page might be faster if the developer modifies the appearance and functionality of the page. Optimization suggestions: A list of best practices that could be applied to a page. Google’s PageSpeed Insights in action Google’s Lighthouse is very handy for mobile performance, accessibility, and Progressive Web Apps audits. It provides various useful metrics that can be used to measure page performance on mobile devices, such as: First Meaningful Paint that measures when the primary content of a page is visible. Time to Interactive is the point at which the page is ready for a user to interact with. Speed Index measures shows how quickly a page are visibly populated Both tools provide recommendations to help improve any reported site performance issues. Google’s Lighthouse in action You can also use this Google tool to get a rough estimate on the percentage of users you may be losing from your mobile site’s pages due to slow page loading times. The same tool also provides an industry comparison so you get an idea of how far you are from the top performing sites in your industry. Measuring speed from real users Once the site has gone live, you can start evaluating site speed based on the users visiting your site. If you have Google Analytics, you can easily compare the new site’s average load time with the previous one. In addition, if you have access to a Real User Monitoring tool such as Pingdom, you can evaluate site speed based on the users visiting your website. The below map illustrates how different visitors experience very different loading times depending on their geographic location. In the below example, the page loading times appear to be satisfactory to visitors from the UK, US, and Germany, but to users residing in other countries they are much higher. Phase 6: Measuring site migration performance When to measure Has the site migration been successful? This is the million-dollar question everyone involved would like to know the answer to as soon as the new site goes live. In reality, the longer you wait the clearer the answer becomes, as visibility during the first few weeks or even months can be very volatile depending on the size and authority of your site. For smaller sites, a 4–6 week period should be sufficient before comparing the new site’s visibility with the old site’s. For large websites you may have to wait for at least 2–3 months before measuring. In addition, if the new site is significantly different from the previous one, users will need some time to get used to the new look and feel and acclimatize themselves with the new taxonomy, user journeys, etc. Such changes initially have a significant negative impact on the site’s conversion rate, which should improve after a few weeks as returning visitors are getting more and more used to the new site. In any case, making data-driven conclusions about the new site’s UX can be risky. But these are just general rules of thumb and need to be taken into consideration along with other factors. For instance, if a few days or weeks after the new site launch significant additional changes were made (e.g. to address a technical issue), the migration’s evaluation should be pushed further back. How to measure Performance measurement is very important and even though business stakeholders would only be interested to hear about the revenue and traffic impact, there are a whole lot of other metrics you should pay attention to. For example, there can be several reasons for revenue going down following a site migration, including seasonal trends, lower brand interest, UX issues that have significantly lowered the site’s conversion rate, poor mobile performance, poor page loading times, etc. So, in addition to the organic traffic and revenue figures, also pay attention to the following: Desktop & mobile visibility (from SearchMetrics, SEMrush, Sistrix) Desktop and mobile rankings (from any reliable rank tracking tool) User engagement (bounce rate, average time on page) Sessions per page type (i.e. are the category pages driving as many sessions as before?) Conversion rate per page type (i.e. are the product pages converting the same way as before?) Conversion rate by device (i.e. has the desktop/mobile conversion rate increased/decreased since launching the new site?) Reviewing the below could also be very handy, especially from a technical troubleshooting perspective: Number of indexed pages (Search Console) Submitted vs indexed pages in XML sitemaps (Search Console) Pages receiving at least one visit (analytics) Site speed (PageSpeed Insights, Lighthouse, Google Analytics) It’s only after you’ve looked into all the above areas that you could safely conclude whether your migration has been successful or not. Good luck and if you need any consultation or assistance with your site migration, please get in touch! Site migration checklist An up-to-date site migration checklist is available to download from our site. Please note that the checklist is regularly updated to include all critical areas for a successful site migration. Appendix: Useful tools Crawlers Screaming Frog: The SEO Swiss army knife, ideal for crawling small- and medium-sized websites. Sitebulb: Very intuitive crawler application with a neat user interface, nicely organized reports, and many useful data visualizations. Deep Crawl: Cloud-based crawler with the ability to crawl staging sites and make crawl comparisons. Allows for comparisons between different crawls and copes well with large websites. Botify: Another powerful cloud-based crawler supported by exceptional server log file analysis capabilities that can be very insightful in terms of understanding how search engines crawl the site. On-Crawl: Crawler and server log analyzer for enterprise SEO audits with many handy features to identify crawl budget, content quality, and performance issues. Handy Chrome add-ons Web developer: A collection of developer tools including easy ways to enable/disable JavaScript, CSS, images, etc. User agent switcher: Switch between different user agents including Googlebot, mobile, and other agents. Ayima Redirect Path: A great header and redirect checker. SEO Meta in 1 click: An on-page meta attributes, headers, and links inspector. Scraper: An easy way to scrape website data into a spreadsheet. Site monitoring tools Uptime Robot: Free website uptime monitoring. Robotto: Free robots.txt monitoring tool. Pingdom tools: Monitors site uptime and page speed from real users (RUM service) SEO Radar: Monitors all critical SEO elements and fires alerts when these change. Site performance tools PageSpeed Insights: Measures page performance for mobile and desktop devices. It checks to see if a page has applied common performance best practices and provides a score, which ranges from 0 to 100 points. Lighthouse: Handy Chrome extension for performance, accessibility, Progressive Web Apps audits. Can also be run from the command line, or as a Node module. Webpagetest.org: Very detailed page tests from various locations, connections, and devices, including detailed waterfall charts. Structured data testing tools Google’s structured data testing tool & Google’s structured data testing tool Chrome extension Bing’s markup validator Yandex structured data testing tool Google’s rich results testing tool Mobile testing tools Google’s mobile-friendly testing tool Google’s AMP testing tool AMP validator tool Backlink data sources Ahrefs Majestic SEO Copied! Back to Top",
  "headers": [
    {
      "level": "H4",
      "text": "Discover top competitors’ winning content"
    },
    {
      "level": "H4",
      "text": "What is your Brand Authority?"
    },
    {
      "level": "H4",
      "text": "Unlock flexible pricing & new endpoints"
    },
    {
      "level": "H4",
      "text": "Surface actionable competitive intel"
    },
    {
      "level": "H1",
      "text": "The Website Migration Guide: SEO Strategy, Process, & Checklist"
    },
    {
      "level": "H3",
      "text": "Table of Contents"
    },
    {
      "level": "H1",
      "text": "The Website Migration Guide: SEO Strategy, Process, & Checklist"
    },
    {
      "level": "H2",
      "text": "What is a site migration?"
    },
    {
      "level": "H3",
      "text": "Quick access links"
    },
    {
      "level": "H2",
      "text": "Site migration examples"
    },
    {
      "level": "H3",
      "text": "Debunking the “expected traffic drop” myth"
    },
    {
      "level": "H3",
      "text": "Examples of unsuccessful site migrations"
    },
    {
      "level": "H3",
      "text": "Examples of successful site migrations"
    },
    {
      "level": "H2",
      "text": "Site migration types"
    },
    {
      "level": "H3",
      "text": "Site move migrations"
    },
    {
      "level": "H4",
      "text": "Protocol change"
    },
    {
      "level": "H4",
      "text": "Subdomain or subfolder change"
    },
    {
      "level": "H4",
      "text": "Domain name change"
    },
    {
      "level": "H4",
      "text": "Top-level domain change"
    },
    {
      "level": "H4",
      "text": "Site structure changes"
    },
    {
      "level": "H3",
      "text": "Other types of migrations"
    },
    {
      "level": "H4",
      "text": "Replatforming"
    },
    {
      "level": "H4",
      "text": "Content migrations"
    },
    {
      "level": "H4",
      "text": "Mobile setup changes"
    },
    {
      "level": "H4",
      "text": "Structural changes"
    },
    {
      "level": "H4",
      "text": "Site redesigns"
    },
    {
      "level": "H4",
      "text": "Hybrid migrations"
    },
    {
      "level": "H2",
      "text": "Common site migration pitfalls"
    },
    {
      "level": "H3",
      "text": "Poor strategy"
    },
    {
      "level": "H3",
      "text": "Poor planning"
    },
    {
      "level": "H3",
      "text": "Lack of resources"
    },
    {
      "level": "H3",
      "text": "Lack of SEO/UX consultation"
    },
    {
      "level": "H3",
      "text": "Late involvement"
    },
    {
      "level": "H3",
      "text": "Lack of testing"
    },
    {
      "level": "H3",
      "text": "Slow response to bug fixing"
    },
    {
      "level": "H3",
      "text": "Underestimating scale"
    },
    {
      "level": "H2",
      "text": "Site migration process"
    },
    {
      "level": "H2",
      "text": "Phase 1: Scope & Planning"
    },
    {
      "level": "H3",
      "text": "Work out the project scope"
    },
    {
      "level": "H3",
      "text": "Prepare the project plan"
    },
    {
      "level": "H2",
      "text": "Phase 2: Pre-launch preparation"
    },
    {
      "level": "H3",
      "text": "Wireframes review"
    },
    {
      "level": "H3",
      "text": "Preparing the technical SEO specifications"
    },
    {
      "level": "H3",
      "text": "Identifying priority pages"
    },
    {
      "level": "H4",
      "text": "How to crawl the legacy site"
    },
    {
      "level": "H4",
      "text": "How to identify the indexable pages"
    },
    {
      "level": "H3",
      "text": "How to identify the top performing pages"
    },
    {
      "level": "H3",
      "text": "Benchmarking"
    },
    {
      "level": "H4",
      "text": "Keywords rank tracking"
    },
    {
      "level": "H4",
      "text": "Site performance"
    },
    {
      "level": "H4",
      "text": "Old site crawl data"
    },
    {
      "level": "H4",
      "text": "Search Console data"
    },
    {
      "level": "H3",
      "text": "Redirects preparation"
    },
    {
      "level": "H4",
      "text": "Why are redirects important in site migrations?"
    },
    {
      "level": "H4",
      "text": "What happens when redirects aren’t correctly implemented?"
    },
    {
      "level": "H4",
      "text": "301, 302, JavaScript redirects, or meta refresh?"
    },
    {
      "level": "H4",
      "text": "Redirect mapping process"
    },
    {
      "level": "H4",
      "text": "Increasing efficiencies during the redirect mapping process"
    },
    {
      "level": "H4",
      "text": "Don’t forget the legacy redirects!"
    },
    {
      "level": "H5",
      "text": "Example:"
    },
    {
      "level": "H4",
      "text": "Implement blanket redirect rules to avoid duplicate content"
    },
    {
      "level": "H4",
      "text": "Avoid internal redirects"
    },
    {
      "level": "H4",
      "text": "Don’t forget your image files"
    },
    {
      "level": "H2",
      "text": "Phase 3: Pre-launch testing"
    },
    {
      "level": "H3",
      "text": "Making sure search engines cannot access the staging/test site"
    },
    {
      "level": "H4",
      "text": "Site available to specific IPs (most recommended)"
    },
    {
      "level": "H4",
      "text": "Password protection"
    },
    {
      "level": "H4",
      "text": "Robots.txt blocking"
    },
    {
      "level": "H3",
      "text": "User journey review"
    },
    {
      "level": "H3",
      "text": "Site architecture review"
    },
    {
      "level": "H3",
      "text": "Meta data & copy review"
    },
    {
      "level": "H3",
      "text": "Internal linking review"
    },
    {
      "level": "H3",
      "text": "Technical checks"
    },
    {
      "level": "H4",
      "text": "Robots.txt file review"
    },
    {
      "level": "H4",
      "text": "Canonical tags review"
    },
    {
      "level": "H4",
      "text": "Meta robots review"
    },
    {
      "level": "H4",
      "text": "XML sitemaps review"
    },
    {
      "level": "H4",
      "text": "HTML sitemap review"
    },
    {
      "level": "H4",
      "text": "Structured data review"
    },
    {
      "level": "H4",
      "text": "JavaScript crawling review"
    },
    {
      "level": "H3",
      "text": "Mobile site SEO review"
    },
    {
      "level": "H4",
      "text": "Assets blocking review"
    },
    {
      "level": "H4",
      "text": "Mobile-first index review"
    },
    {
      "level": "H4",
      "text": "Responsive site review"
    },
    {
      "level": "H4",
      "text": "Separate mobile URLs review"
    },
    {
      "level": "H4",
      "text": "Dynamic serving review"
    },
    {
      "level": "H4",
      "text": "Mobile-friendliness review"
    },
    {
      "level": "H4",
      "text": "AMP site review"
    },
    {
      "level": "H4",
      "text": "Mixed content errors"
    },
    {
      "level": "H4",
      "text": "Image assets review"
    },
    {
      "level": "H3",
      "text": "Site performance review"
    },
    {
      "level": "H3",
      "text": "Analytics tracking review"
    },
    {
      "level": "H3",
      "text": "Redirects testing"
    },
    {
      "level": "H2",
      "text": "Phase 4: Launch day activities"
    },
    {
      "level": "H3",
      "text": "When the site is down..."
    },
    {
      "level": "H3",
      "text": "Technical spot checks"
    },
    {
      "level": "H3",
      "text": "Search Console actions"
    },
    {
      "level": "H2",
      "text": "Phase 5: Post-launch review"
    },
    {
      "level": "H3",
      "text": "Check crawl stats and server logs"
    },
    {
      "level": "H3",
      "text": "Review crawl errors regularly"
    },
    {
      "level": "H3",
      "text": "Other useful Search Console features"
    },
    {
      "level": "H3",
      "text": "Measuring site speed"
    },
    {
      "level": "H4",
      "text": "Evaluating speed using Google’s tools"
    },
    {
      "level": "H4",
      "text": "Measuring speed from real users"
    },
    {
      "level": "H2",
      "text": "Phase 6: Measuring site migration performance"
    },
    {
      "level": "H3",
      "text": "When to measure"
    },
    {
      "level": "H3",
      "text": "How to measure"
    },
    {
      "level": "H2",
      "text": "Site migration checklist"
    },
    {
      "level": "H2",
      "text": "Appendix: Useful tools"
    },
    {
      "level": "H3",
      "text": "Crawlers"
    },
    {
      "level": "H3",
      "text": "Handy Chrome add-ons"
    },
    {
      "level": "H3",
      "text": "Site monitoring tools"
    },
    {
      "level": "H3",
      "text": "Site performance tools"
    },
    {
      "level": "H3",
      "text": "Structured data testing tools"
    },
    {
      "level": "H3",
      "text": "Mobile testing tools"
    },
    {
      "level": "H3",
      "text": "Backlink data sources"
    },
    {
      "level": "H2",
      "text": "With Moz Pro, you have the tools you need to get SEO right — all in one place."
    },
    {
      "level": "H2",
      "text": "Read Next"
    },
    {
      "level": "H3",
      "text": "How to Optimize E-commerce Sitemaps with 1M+ Pages — Whiteboard Friday"
    },
    {
      "level": "H3",
      "text": "7 Ways SEO and Product Teams Can Collaborate to Ensure Success"
    },
    {
      "level": "H3",
      "text": "6 Things SEOs Should Advocate for When Building a Headless Website — Whiteboard Friday"
    },
    {
      "level": "H2",
      "text": "Comments"
    }
  ],
  "author": "Modestos Siotos\n          \n            Modestos Siotos\n          \n            Modestos Siotos"
}