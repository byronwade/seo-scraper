{
  "url": "https://moz.com/blog/computer-programming-web-development-is-an-excellent-career-choice",
  "slug": "computer-programming-web-development-is-an-excellent-career-choice",
  "title": "Computer Programming, Particularly Web Development, Is An Excellent Career Choice - MozMoz logoMenu openMenu closeSearchMoz logo",
  "description": "A writer at the blog, Half Sigma, recently authored a post entitled - Why a Career in Computer Programming Sucks. I haven't taken the bait on one of these in a while and figured I'd throw in my two cents on why this obviously intelligent, articulate and experienced fellow doesn't what the @#$%! he…",
  "content": "Computer Programming, Particularly Web Development, Is An Excellent Career Choice Technical SEO By: Rand Fishkin March 13, 2007 The author's views are entirely their own (excluding the unlikely event of hypnosis) and may not always reflect the views of Moz. Table of Contents Copied! By: Rand Fishkin March 13, 2007 Computer Programming, Particularly Web Development, Is An Excellent Career Choice Technical SEO The author's views are entirely their own (excluding the unlikely event of hypnosis) and may not always reflect the views of Moz. A writer at the blog, Half Sigma, recently authored a post entitled - Why a Career in Computer Programming Sucks. I haven't taken the bait on one of these in a while and figured I'd throw in my two cents on why this obviously intelligent, articulate and experienced fellow doesn't know what the @#$%! he is talking about. Let's first review his primary arguments: 1. Programming experience does not build over time: Because of the temporary nature of the knowledge capital, computer programmers quickly reach a stage in their career when their old knowledge capital becomes worthless at the same rate as they acquire knew knowledge capital. Their total knowledge capital is no longer increasing, so neither does their salary increase. They have reached the dead end plateau of their career, and it happens after less than ten years in the field. 2. Low prestige: Students at Ivy League universities are not majoring in computer programming. There is a prestigious school, the Massachusetts Institute of Technology, devoted to science and engineering, and while I’m sure that there are some students there who are majoring in “computer science,” the science that’s taught isn’t related to the dirty low-prestige job of creating e-commerce websites using ASP.NET. On the other hand, practical computer programming is a popular major at bogus for-profit schools like Devry “University” and the “University” of Phoenix. 3. Outsourcing: Foreignization creates a vicious circle effect with the low prestige of the profession. Because the profession has low prestige, employers balk at the idea of having to pay high salaries (while it seems perfectly appropriate if a lawyer or investment banker is making a lot of money). Thus the demand for more H1-B visas so that salaries can be decreased. In turn, Americans see an industry full of brown people speaking barely intelligible English, and this further lowers the industry’s prestige. Computer programming and IT in general is now seen as the foreigner’s industry and not a proper profession for upwardly mobile white Americans. 4. Project Mangement is the Only Upward Direction and Even that Sucks: Formal project management is more of a pseudo-science than a real profession, because despite the increasing use of formal project management methods approved by the Project Management Institute (yes they have their own institute), there is no evidence that software is getting better or that fewer software projects fail today than did ten years ago when formal project management was in its infancy. 5. Working Conditions Are Terrible: If you look forward to one day having your own private office, then computer programming sure isn’t the way to go. At a law firm, each lawyer has his own private office. Computer programmers are cubicle employees, not considered important enough to be given nice workspaces. Now let's take him apart piece by piece. On the first issue: Programming, particularly in web development, is universally applicable and the more experience and more talent you have, the better you'll become, the more you'll be worth and the more you can do. The fields of Internet marketing, web enterpreneurship, SEO, and, yes, arbitrage and blackhat are littered with talented programmers. Unless you have lost the will or ability to learn from mistakes, you will get better at writing regular expressions, coding to produce fewer errors, learning new languages more quickly and leveraging your previous experience to make better code. His arguments against the application of prior knowledge is akin to suggesting that an experienced cook faced with a new dish will have no advantage over a kitchen newbie. On low prestige: This is the type of argument that could only be presented in a certain demographic and geographic frame of reference. The author is projecting his personal desire to be viewed by family, friends and co-workers as important and worthy in a very east-coast, blazers-and-brunch style. As a man with lots of relatives in the Northeast, I understand this perspective, but the author must see that his own worldview is not exclusive. I'd argue that in markets like San Francisco, Silicon Valley, Portland, Seattle and Vancouver, a computer programmer is an exceptionally well-regarded profession. His other argument on this point is that the perception of prestige by others hurts programmers because companies and bosses don't value them. At the firms I work with (as a consultant) and in my own office, programmers are treated exceptionally well. At places like Microsoft, Google, Yahoo! and the dozens of tech startups, they're practically revered. On outsourcing: This argument could be made for nearly any profession that's easy to perform remotely. However, over the past 10 years, the trend of outsourcing has not lowered the demand for programmers, nor their salaries. Without relevant data to back this up, I'm forced to come to the conclusion that the author is simply wrong. On upward mobility: Excellent programmers (like the two we've got at SEOmoz) are creative, inventive and, though it pains me to say, easily able to abandon their jobs, work from home and make great money as consultants or on-demand workers. They also have the freedom to start their own revenue-earning projects online, and the experience to succeed. Success need not be accomplished at a company, but even if it did, programmers can transition into lead technical roles, designing systems, architecting projects and creating on a higher level while other programmers build. I have two programmer friends who started their own companies, one in game development and the other in software architecture consulting. Both considerably outearn me. On working conditions: I've toured Google & Yahoo & Microsoft. I've been to the offices of companies like Wetpaint and Farecast and many others and seen the horrible working conditions. Only two 24\" widescreen monitors each with free snacks and drinks and social events and gym memberships... Oh, the humanity. Seriously, I think that the author's complaints stem from his own experiences and while mine are probably at the far opposite end of the spectrum, working conditions fluctuate in every job. His suggestions of becoming an accountant or patent attorney present similar spectrums. Programmers, in general, don't need to be defended. They're smart. They have their own popular subculture. They prosper and learn and advance and have more opportunities available to them then nearly any profession in the history of humankind. As the author's subpar responses to the common criticisms he received in the comments suggests, the motivation for the post is almost certainly a bad experience. For that, I offer my condolences. No one should be treated badly in any industry, but we take our licks and move on - that's what makes us better people. I'm writing this for the college kids and high schoolers and elementary children (yes, they start that young) who are considering a career in software and web development. Don't be discouraged, gang. You will have a chance to change the world for the better (and earn like crazy while you do it). UPDATE: A like-minded individual has pointed out some additional reasons why our half-sigma friend's arguments don't hold water that's also worth reading. Copied! Back to Top",
  "headers": [
    {
      "level": "H4",
      "text": "Discover top competitors’ winning content"
    },
    {
      "level": "H4",
      "text": "What is your Brand Authority?"
    },
    {
      "level": "H4",
      "text": "Unlock flexible pricing & new endpoints"
    },
    {
      "level": "H4",
      "text": "Surface actionable competitive intel"
    },
    {
      "level": "H1",
      "text": "Computer Programming, Particularly Web Development, Is An Excellent Career Choice"
    },
    {
      "level": "H3",
      "text": "Table of Contents"
    },
    {
      "level": "H1",
      "text": "Computer Programming, Particularly Web Development, Is An Excellent Career Choice"
    },
    {
      "level": "H2",
      "text": "With Moz Pro, you have the tools you need to get SEO right — all in one place."
    },
    {
      "level": "H2",
      "text": "Read Next"
    },
    {
      "level": "H3",
      "text": "How to Optimize E-commerce Sitemaps with 1M+ Pages — Whiteboard Friday"
    },
    {
      "level": "H3",
      "text": "7 Ways SEO and Product Teams Can Collaborate to Ensure Success"
    },
    {
      "level": "H3",
      "text": "6 Things SEOs Should Advocate for When Building a Headless Website — Whiteboard Friday"
    },
    {
      "level": "H2",
      "text": "Comments"
    }
  ],
  "author": "Rand Fishkin\n          \n            Rand Fishkin"
}